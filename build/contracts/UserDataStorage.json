{
  "contractName": "UserDataStorage",
  "abi": [
    {
<<<<<<< HEAD
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
=======
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "companies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "approvedBy",
>>>>>>> origin/CarbonToken
          "type": "address"
        }
      ],
      "name": "setCompanyContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setRegulatorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setCompanyContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setRegulatorContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "country",
          "type": "string"
        },
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "addRegulator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeRegulator",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
<<<<<<< HEAD
      "name": "isAuthorisedRegulator",
=======
      "name": "isApprovedRegulator",
>>>>>>> origin/CarbonToken
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "company",
          "type": "address"
        },
        {
          "name": "approvedBy",
          "type": "address"
        }
      ],
      "name": "addCompany",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "company",
          "type": "address"
        }
      ],
      "name": "removeCompany",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "company",
          "type": "address"
        },
        {
          "name": "year",
          "type": "uint256"
        },
        {
          "name": "emissions",
          "type": "uint256"
        }
      ],
      "name": "updateCompanyEmissions",
<<<<<<< HEAD
=======
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "company",
          "type": "address"
        },
        {
          "name": "year",
          "type": "uint256"
        },
        {
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "updateCompanyLimits",
>>>>>>> origin/CarbonToken
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedCompany",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "year",
          "type": "uint256"
        }
      ],
      "name": "getEmissions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "year",
          "type": "uint256"
        }
      ],
      "name": "getLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
<<<<<<< HEAD
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"company\",\"type\":\"address\"}],\"name\":\"removeCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"year\",\"type\":\"uint256\"},{\"name\":\"emissions\",\"type\":\"uint256\"}],\"name\":\"updateCompanyEmissions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isAuthorisedRegulator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRegulator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeRegulator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setRegulatorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"approvedBy\",\"type\":\"address\"}],\"name\":\"addCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setCompanyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/UserDataStorage.sol\":\"UserDataStorage\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/UserDataStorage.sol\":{\"keccak256\":\"0x812e5ede6e81f82ecfdb219d0966c376c6af97fb2ae57f60d380b691b3e0a896\",\"urls\":[\"bzzr://5ddea6b46516c8ec7a86e841312e6e385e0b8d886b820a98a4bb0e58045ae21f\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114b3806100606000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320ee2dcc1461009e57806326d03f22146100ef5780633190507314610154578063337cfb78146101bd578063379f5fed1461033c578063656b45081461038d578063782ef2c5146103de578063b635851114610447578063b67d4e131461054f575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a0565b005b3480156100fb57600080fd5b506101526004803603606081101561011257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506107d6565b005b34801561016057600080fd5b506101a36004803603602081101561017757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ed565b604051808215151515815260200191505060405180910390f35b3480156101c957600080fd5b5061033a600480360360608110156101e057600080fd5b81019080803590602001906401000000008111156101fd57600080fd5b82018360208201111561020f57600080fd5b8035906020019184600183028401116401000000008311171561023157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561029457600080fd5b8201836020820111156102a657600080fd5b803590602001918460018302840111640100000000831117156102c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a50565b005b34801561034857600080fd5b5061038b6004803603602081101561035f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c79565b005b34801561039957600080fd5b506103dc600480360360208110156103b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e98565b005b3480156103ea57600080fd5b5061042d6004803603602081101561040157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa0565b604051808215151515815260200191505060405180910390f35b34801561045357600080fd5b5061054d6004803603606081101561046a57600080fd5b810190808035906020019064010000000081111561048757600080fd5b82018360208201111561049957600080fd5b803590602001918460018302840111640100000000831117156104bb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611003565b005b34801561055b57600080fd5b5061059e6004803603602081101561057257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611292565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610665576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415151561075a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006107aa919061139a565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600084815260200190815260200160002081905550505050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515610be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526567756c61746f7220697320616c726561647920617574686f72697365642181525060200191505060405180910390fd5b604080519081016040528084815260200183815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610c539291906113e2565b506020820151816001019080519060200190610c709291906113e2565b50905050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610e33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f41646472657373206973206e6f7420616e20617574686f72697365642072656781526020017f756c61746f72210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610e83919061139a565b600182016000610e93919061139a565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c7920746865206f776e65722063616e20646f207468697300000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415156111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4164647265737320697320616c726561647920616e20617070726f766564204381526020017f6f6d70616e79210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60408051908101604052808481526020018273ffffffffffffffffffffffffffffffffffffffff16815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906112429291906113e2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c7920746865206f776e65722063616e20646f207468697300000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50805460018160011615610100020316600290046000825580601f106113c057506113df565b601f0160209004906000526020600020908101906113de9190611462565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061142357805160ff1916838001178555611451565b82800160010185558215611451579182015b82811115611450578251825591602001919060010190611435565b5b50905061145e9190611462565b5090565b61148491905b80821115611480576000816000905550600101611468565b5090565b9056fea165627a7a72305820dd04218775240cb9a591daeb15f26d47d79e421492cc095644080ead0cfaf09a0029",
  "deployedBytecode": "0x608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320ee2dcc1461009e57806326d03f22146100ef5780633190507314610154578063337cfb78146101bd578063379f5fed1461033c578063656b45081461038d578063782ef2c5146103de578063b635851114610447578063b67d4e131461054f575b600080fd5b3480156100aa57600080fd5b506100ed600480360360208110156100c157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105a0565b005b3480156100fb57600080fd5b506101526004803603606081101561011257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506107d6565b005b34801561016057600080fd5b506101a36004803603602081101561017757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109ed565b604051808215151515815260200191505060405180910390f35b3480156101c957600080fd5b5061033a600480360360608110156101e057600080fd5b81019080803590602001906401000000008111156101fd57600080fd5b82018360208201111561020f57600080fd5b8035906020019184600183028401116401000000008311171561023157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561029457600080fd5b8201836020820111156102a657600080fd5b803590602001918460018302840111640100000000831117156102c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a50565b005b34801561034857600080fd5b5061038b6004803603602081101561035f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c79565b005b34801561039957600080fd5b506103dc600480360360208110156103b057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e98565b005b3480156103ea57600080fd5b5061042d6004803603602081101561040157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fa0565b604051808215151515815260200191505060405180910390f35b34801561045357600080fd5b5061054d6004803603606081101561046a57600080fd5b810190808035906020019064010000000081111561048757600080fd5b82018360208201111561049957600080fd5b803590602001918460018302840111640100000000831117156104bb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611003565b005b34801561055b57600080fd5b5061059e6004803603602081101561057257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611292565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610665576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415151561075a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006107aa919061139a565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561089b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610990576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600084815260200190815260200160002081905550505050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b15576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515610be3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526567756c61746f7220697320616c726561647920617574686f72697365642181525060200191505060405180910390fd5b604080519081016040528084815260200183815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610c539291906113e2565b506020820151816001019080519060200190610c709291906113e2565b50905050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610e33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f41646472657373206973206e6f7420616e20617574686f72697365642072656781526020017f756c61746f72210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610e83919061139a565b600182016000610e93919061139a565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c7920746865206f776e65722063616e20646f207468697300000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415156111bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4164647265737320697320616c726561647920616e20617070726f766564204381526020017f6f6d70616e79210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60408051908101604052808481526020018273ffffffffffffffffffffffffffffffffffffffff16815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906112429291906113e2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611356576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4f6e6c7920746865206f776e65722063616e20646f207468697300000000000081525060200191505060405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50805460018160011615610100020316600290046000825580601f106113c057506113df565b601f0160209004906000526020600020908101906113de9190611462565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061142357805160ff1916838001178555611451565b82800160010185558215611451579182015b82811115611450578251825591602001919060010190611435565b5b50905061145e9190611462565b5090565b61148491905b80821115611480576000816000905550600101611468565b5090565b9056fea165627a7a72305820dd04218775240cb9a591daeb15f26d47d79e421492cc095644080ead0cfaf09a0029",
  "sourceMap": "83:3838:9:-;;;652:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:58:9;692:10;684:5;;:18;;;;;;;;;;;;;;;;;;83:3838;;;;;;",
  "deployedSourceMap": "83:3838:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3029:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3029:277:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3029:277:9;;;;;;;;;;;;;;;;;;;;;;3370:340;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3370:340:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3370:340:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2360:145:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2360:145:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:377;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1523:377:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1523:377:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1523:377:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1523:377:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1523:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1523:377:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1523:377:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1523:377:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1523:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1523:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1969:284;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1969:284:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1969:284:9;;;;;;;;;;;;;;;;;;;;;;1316:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:114:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1316:114:9;;;;;;;;;;;;;;;;;;;;;;3776:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3776:140:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3776:140:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2589:379:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2589:379:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2589:379:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2589:379:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2589:379:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2589:379:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1198:110:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1198:110:9;;;;;;;;;;;;;;;;;;;;;;3029:277;953:15;;;;;;;;;;;939:29;;:10;:29;;;931:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:1;3184:9;:18;3194:7;3184:18;;;;;;;;;;;;;;;:23;;3178:37;;;;;;;;;;;;;;;;:42;;3170:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3280:9;:18;3290:7;3280:18;;;;;;;;;;;;;;;;3273:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3029:277;:::o;3370:340::-;953:15;;;;;;;;;;;939:29;;:10;:29;;;931:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3602:1;3567:9;:18;3577:7;3567:18;;;;;;;;;;;;;;;:23;;3561:37;;;;;;;;;;;;;;;;:42;;3553:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3693:9;3656;:18;3666:7;3656:18;;;;;;;;;;;;;;;:28;;:34;3685:4;3656:34;;;;;;;;;;;:46;;;;3370:340;;;:::o;2360:145::-;2429:4;2496:1;2459:10;:20;2470:8;2459:20;;;;;;;;;;;;;;;:25;;2453:39;;;;;;;;;;;;;;;;:44;;2446:51;;2360:145;;;:::o;1523:377::-;810:17;;;;;;;;;;;796:31;;:10;:31;;;788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1768:1;1731:10;:20;1742:8;1731:20;;;;;;;;;;;;;;;:25;;1725:39;;;;;;;;;;;;;;;;:44;1717:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1840:52;;;;;;;;;1868:4;1840:52;;;;1883:7;1840:52;;;1817:10;:20;1828:8;1817:20;;;;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1523:377;;;:::o;1969:284::-;810:17;;;;;;;;;;;796:31;;:10;:31;;;788:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2160:1;2123:10;:20;2134:8;2123:20;;;;;;;;;;;;;;;:25;;2117:39;;;;;;;;;;;;;;;;:44;;2109:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:10;:20;2236:8;2225:20;;;;;;;;;;;;;;;;2218:27;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;1969:284;:::o;1316:114::-;1075:5;;;;;;;;;;;1061:19;;:10;:19;;;1053:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1414:8;1394:17;;:28;;;;;;;;;;;;;;;;;;1316:114;:::o;3776:140::-;3841:4;3907:1;3871:9;:19;3881:8;3871:19;;;;;;;;;;;;;;;:24;;3865:38;;;;;;;;;;;;;;;;:43;;3858:50;;3776:140;;;:::o;2589:379::-;953:15;;;;;;;;;;;939:29;;:10;:29;;;931:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2827:1;2792:9;:18;2802:7;2792:18;;;;;;;;;;;;;;;:23;;2786:37;;;;;;;;;;;;;;;;:42;2778:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2904:56;;;;;;;;;2930:4;2904:56;;;;2948:10;2904:56;;;;;2883:9;:18;2893:7;2883:18;;;;;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2589:379;;;:::o;1198:110::-;1075:5;;;;;;;;;;;1061:19;;:10;:19;;;1053:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:8;1274:15;;:26;;;;;;;;;;;;;;;;;;1198:110;:::o;83:3838::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n//Data segregation for company and regulator profiles \r\ncontract UserDataStorage {\r\n\r\n    // enum Status {\r\n    //     Requested,\r\n    //     Approved,\r\n    //     Rejected\r\n    // }\r\n    \r\n    struct RegulatorInformation {\r\n        string name;\r\n        string country;\r\n    }\r\n\r\n    struct CompanyInformation {\r\n        string name;\r\n        address approvedBy;\r\n        mapping(uint256 => uint256) emissions;\r\n    }\r\n\r\n    address owner;\r\n    address regulatorContract;\r\n    address companyContract;\r\n\r\n    mapping(address => RegulatorInformation) regulators;\r\n    mapping(address => CompanyInformation) companies;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // modifiers\r\n    modifier approvedRegulatorContractOnly() {\r\n        require(msg.sender == regulatorContract, 'Unauthorised address!');\r\n        _;\r\n    }\r\n\r\n    modifier approvedCompanyContractOnly() {\r\n        require(msg.sender == companyContract, 'Unathorised address!');\r\n        _;\r\n    }\r\n\r\n    modifier ownerOnly() {\r\n        require(msg.sender == owner, \"Only the owner can do this\");\r\n        _;\r\n    }\r\n\r\n    //set address of regulator and and company contract\r\n\r\n    function setCompanyContract(address _address) ownerOnly() public {\r\n        companyContract = _address;\r\n    }\r\n\r\n    function setRegulatorContract(address _address) ownerOnly() public {\r\n        regulatorContract = _address;\r\n    }\r\n\r\n    // Regulator Functions\r\n\r\n    // add regulator to list of authorised regulators\r\n    function addRegulator(string memory name, string memory country, address _address) public approvedRegulatorContractOnly {\r\n        // ensure that regulator has not been authorised yet.\r\n        require(bytes(regulators[_address].name).length == 0, 'Regulator is already authorised!');\r\n        regulators[_address] = RegulatorInformation({name: name, country: country});\r\n    }\r\n\r\n    // remove regulators from list of authorised regulators\r\n    function removeRegulator(address _address) public approvedRegulatorContractOnly {\r\n        // Ensure that regulator is authorised.\r\n        require(bytes(regulators[_address].name).length != 0, 'Address is not an authorised regulator!');\r\n\r\n        delete regulators[_address];\r\n    }\r\n\r\n    // Regulator Getter functions\r\n\r\n    // checks if address belongs to an authorised regulator.\r\n    function isAuthorisedRegulator(address _address) public view returns(bool) {\r\n        return bytes(regulators[_address].name).length != 0;\r\n    }\r\n\r\n    // Company functions\r\n\r\n    // to add company to approved company list\r\n    function addCompany(string memory name, address company, address approvedBy) public approvedCompanyContractOnly {\r\n        //ensure that address is not already an approved company\r\n        require(bytes(companies[company].name).length == 0, 'Address is already an approved Company!');\r\n        companies[company] = CompanyInformation({name: name, approvedBy: approvedBy});\r\n    }\r\n\r\n    // to remove company from approved company list\r\n    function removeCompany(address company) public approvedCompanyContractOnly {\r\n        // ensure that address is an approved company\r\n        require(bytes(companies[company].name).length != 0, 'Address is not an approved company!');\r\n\r\n        delete companies[company];\r\n    }\r\n\r\n    // To update campany carbon emissions for the year\r\n    function updateCompanyEmissions(address company, uint256 year, uint256 emissions) public approvedCompanyContractOnly {\r\n        // ensure that address is an approved company\r\n        require(bytes(companies[company].name).length != 0, 'Address is not an approved company!');\r\n\r\n        companies[company].emissions[year] = emissions;\r\n    }\r\n\r\n    // checks if address belongs to an approved company.\r\n    function isApprovedCompany(address _address) public view returns(bool) {\r\n        return bytes(companies[_address].name).length != 0;\r\n    }\r\n\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\Daniel\\Desktop\\IS4302-CarbonCoin\\contracts\\UserDataStorage.sol",
=======
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"company\",\"type\":\"address\"}],\"name\":\"removeCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"year\",\"type\":\"uint256\"},{\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"updateCompanyLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"year\",\"type\":\"uint256\"},{\"name\":\"emissions\",\"type\":\"uint256\"}],\"name\":\"updateCompanyEmissions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"year\",\"type\":\"uint256\"}],\"name\":\"getLimit\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addRegulator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"companies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"approvedBy\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeRegulator\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"},{\"name\":\"year\",\"type\":\"uint256\"}],\"name\":\"getEmissions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setRegulatorContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"company\",\"type\":\"address\"},{\"name\":\"approvedBy\",\"type\":\"address\"}],\"name\":\"addCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setCompanyContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedRegulator\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/UserDataStorage.sol\":\"UserDataStorage\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/UserDataStorage.sol\":{\"keccak256\":\"0x59b2e0787dba8300b35293b60fc7a79806c4a78c1fa7a7f95f3ca58917dc1f5b\",\"urls\":[\"bzzr://f9c5d10083ec728ffafcce97b4219663bd0423e0bbceb3a812ad6541f403b952\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119fc806100606000396000f3fe6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320ee2dcc146100ca57806322043ee01461011b57806326d03f22146101805780632b84f72a146101e5578063337cfb7814610254578063355e6ce8146103d3578063379f5fed146104d05780633b922b9a14610521578063656b450814610590578063782ef2c5146105e1578063b63585111461064a578063b67d4e1314610752578063b7ce37f6146107a3575b600080fd5b3480156100d657600080fd5b50610119600480360360208110156100ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080c565b005b34801561012757600080fd5b5061017e6004803603606081101561013e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610a42565b005b34801561018c57600080fd5b506101e3600480360360608110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610c59565b005b3480156101f157600080fd5b5061023e6004803603604081101561020857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e70565b6040518082815260200191505060405180910390f35b34801561026057600080fd5b506103d16004803603606081101561027757600080fd5b810190808035906020019064010000000081111561029457600080fd5b8201836020820111156102a657600080fd5b803590602001918460018302840111640100000000831117156102c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561032b57600080fd5b82018360208201111561033d57600080fd5b8035906020019184600183028401116401000000008311171561035f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ece565b005b3480156103df57600080fd5b50610422600480360360208110156103f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110f7565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156104dc57600080fd5b5061051f600480360360208110156104f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d3565b005b34801561052d57600080fd5b5061057a6004803603604081101561054457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113f2565b6040518082815260200191505060405180910390f35b34801561059c57600080fd5b506105df600480360360208110156105b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611450565b005b3480156105ed57600080fd5b506106306004803603602081101561060457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114ef565b604051808215151515815260200191505060405180910390f35b34801561065657600080fd5b506107506004803603606081101561066d57600080fd5b810190808035906020019064010000000081111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111640100000000831117156106be57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611552565b005b34801561075e57600080fd5b506107a16004803603602081101561077557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e1565b005b3480156107af57600080fd5b506107f2600480360360208110156107c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611880565b604051808215151515815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515156109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610a1691906118e3565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610bfc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600084815260200190815260200160002081905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610e13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600084815260200190815260200160002081905550505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600083815260200190815260200160002054905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515611061576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526567756c61746f7220697320616c726561647920617574686f72697365642181525060200191505060405180910390fd5b604080519081016040528084815260200183815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906110d192919061192b565b5060208201518160010190805190602001906110ee92919061192b565b50905050505050565b6004602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415151561138d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f41646472657373206973206e6f7420616e20617574686f72697365642072656781526020017f756c61746f72210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006113dd91906118e3565b6001820160006113ed91906118e3565b505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600083815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114ab57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611617576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151561170b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4164647265737320697320616c726561647920616e20617070726f766564204381526020017f6f6d70616e79210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60408051908101604052808481526020018273ffffffffffffffffffffffffffffffffffffffff16815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061179192919061192b565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183c57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b50805460018160011615610100020316600290046000825580601f106119095750611928565b601f01602090049060005260206000209081019061192791906119ab565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061196c57805160ff191683800117855561199a565b8280016001018555821561199a579182015b8281111561199957825182559160200191906001019061197e565b5b5090506119a791906119ab565b5090565b6119cd91905b808211156119c95760008160009055506001016119b1565b5090565b9056fea165627a7a72305820a7dbb600fbb50784b270dcae1587cee82dc17f68d3a053ccddac29dfeaed7f650029",
  "deployedBytecode": "0x6080604052600436106100c5576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806320ee2dcc146100ca57806322043ee01461011b57806326d03f22146101805780632b84f72a146101e5578063337cfb7814610254578063355e6ce8146103d3578063379f5fed146104d05780633b922b9a14610521578063656b450814610590578063782ef2c5146105e1578063b63585111461064a578063b67d4e1314610752578063b7ce37f6146107a3575b600080fd5b3480156100d657600080fd5b50610119600480360360208110156100ed57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061080c565b005b34801561012757600080fd5b5061017e6004803603606081101561013e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610a42565b005b34801561018c57600080fd5b506101e3600480360360608110156101a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050610c59565b005b3480156101f157600080fd5b5061023e6004803603604081101561020857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e70565b6040518082815260200191505060405180910390f35b34801561026057600080fd5b506103d16004803603606081101561027757600080fd5b810190808035906020019064010000000081111561029457600080fd5b8201836020820111156102a657600080fd5b803590602001918460018302840111640100000000831117156102c857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561032b57600080fd5b82018360208201111561033d57600080fd5b8035906020019184600183028401116401000000008311171561035f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ece565b005b3480156103df57600080fd5b50610422600480360360208110156103f657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110f7565b60405180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015610494578082015181840152602081019050610479565b50505050905090810190601f1680156104c15780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156104dc57600080fd5b5061051f600480360360208110156104f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111d3565b005b34801561052d57600080fd5b5061057a6004803603604081101561054457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506113f2565b6040518082815260200191505060405180910390f35b34801561059c57600080fd5b506105df600480360360208110156105b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611450565b005b3480156105ed57600080fd5b506106306004803603602081101561060457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114ef565b604051808215151515815260200191505060405180910390f35b34801561065657600080fd5b506107506004803603606081101561066d57600080fd5b810190808035906020019064010000000081111561068a57600080fd5b82018360208201111561069c57600080fd5b803590602001918460018302840111640100000000831117156106be57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611552565b005b34801561075e57600080fd5b506107a16004803603602081101561077557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117e1565b005b3480156107af57600080fd5b506107f2600480360360208110156107c657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611880565b604051808215151515815260200191505060405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515156109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000610a1691906118e3565b6001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b07576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610bfc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600084815260200190815260200160002081905550505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151515610e13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f41646472657373206973206e6f7420616e20617070726f76656420636f6d706181526020017f6e7921000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600084815260200190815260200160002081905550505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600083815260200190815260200160002054905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805460018160011615610100020316600290049050141515611061576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f526567756c61746f7220697320616c726561647920617574686f72697365642181525060200191505060405180910390fd5b604080519081016040528084815260200183815250600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190805190602001906110d192919061192b565b5060208201518160010190805190602001906110ee92919061192b565b50905050505050565b6004602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111a35780601f10611178576101008083540402835291602001916111a3565b820191906000526020600020905b81548152906001019060200180831161118657829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f556e617574686f7269736564206164647265737321000000000000000000000081525060200191505060405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054600181600116156101000203166002900490501415151561138d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f41646472657373206973206e6f7420616e20617574686f72697365642072656781526020017f756c61746f72210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006113dd91906118e3565b6001820160006113ed91906118e3565b505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600083815260200190815260200160002054905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114ab57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611617576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f556e6174686f726973656420616464726573732100000000000000000000000081525060200191505060405180910390fd5b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014151561170b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f4164647265737320697320616c726561647920616e20617070726f766564204381526020017f6f6d70616e79210000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60408051908101604052808481526020018273ffffffffffffffffffffffffffffffffffffffff16815250600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061179192919061192b565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561183c57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546001816001161561010002031660029004905014159050919050565b50805460018160011615610100020316600290046000825580601f106119095750611928565b601f01602090049060005260206000209081019061192791906119ab565b5b50565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061196c57805160ff191683800117855561199a565b8280016001018555821561199a579182015b8281111561199957825182559160200191906001019061197e565b5b5090506119a791906119ab565b5090565b6119cd91905b808211156119c95760008160009055506001016119b1565b5090565b9056fea165627a7a72305820a7dbb600fbb50784b270dcae1587cee82dc17f68d3a053ccddac29dfeaed7f650029",
  "sourceMap": "83:4425:9:-;;;670:58;8:9:-1;5:2;;;30:1;27;20:12;5:2;670:58:9;710:10;702:5;;:18;;;;;;;;;;;;;;;;;;83:4425;;;;;;",
  "deployedSourceMap": "83:4425:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:277;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2970:277:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2970:277:9;;;;;;;;;;;;;;;;;;;;;;3659:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3659:271:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3659:271:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3311:340;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3311:340:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3311:340:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4363:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4363:138:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4363:138:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1484:377;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1484:377:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1484:377:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1484:377:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1484:377:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1484:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1484:377:9;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1484:377:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1484:377:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1484:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1484:377:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:55;;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:55:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;606:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;606:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:284;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1930:284:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1930:284:9;;;;;;;;;;;;;;;;;;;;;;4210:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4210:145:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4210:145:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1265:112:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1265:112:9;;;;;;;;;;;;;;;;;;;;;;3999:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3999:140:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3999:140:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2530:379;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2530:379:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2530:379:9;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2530:379:9;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2530:379:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2530:379:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2530:379:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1149:108:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1149:108:9;;;;;;;;;;;;;;;;;;;;;;2287:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2287:143:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2287:143:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2970:277;1063:15;;;;;;;;;;;1049:29;;:10;:29;;;1041:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:1;3125:9;:18;3135:7;3125:18;;;;;;;;;;;;;;;:23;;3119:37;;;;;;;;;;;;;;;;:42;;3111:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3221:9;:18;3231:7;3221:18;;;;;;;;;;;;;;;;3214:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2970:277;:::o;3659:271::-;1063:15;;;;;;;;;;;1049:29;;:10;:29;;;1041:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3829:1;3794:9;:18;3804:7;3794:18;;;;;;;;;;;;;;;:23;;3788:37;;;;;;;;;;;;;;;;:42;;3780:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3917:5;3883:9;:18;3893:7;3883:18;;;;;;;;;;;;;;;:25;;:31;3909:4;3883:31;;;;;;;;;;;:39;;;;3659:271;;;:::o;3311:340::-;1063:15;;;;;;;;;;;1049:29;;:10;:29;;;1041:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3543:1;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;:23;;3502:37;;;;;;;;;;;;;;;;:42;;3494:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3634:9;3597;:18;3607:7;3597:18;;;;;;;;;;;;;;;:28;;:34;3626:4;3597:34;;;;;;;;;;;:46;;;;3311:340;;;:::o;4363:138::-;4434:7;4461:9;:19;4471:8;4461:19;;;;;;;;;;;;;;;:26;;:32;4488:4;4461:32;;;;;;;;;;;;4454:39;;4363:138;;;;:::o;1484:377::-;920:17;;;;;;;;;;;906:31;;:10;:31;;;898:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1729:1;1692:10;:20;1703:8;1692:20;;;;;;;;;;;;;;;:25;;1686:39;;;;;;;;;;;;;;;;:44;1678:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1801:52;;;;;;;;;1829:4;1801:52;;;;1844:7;1801:52;;;1778:10;:20;1789:8;1778:20;;;;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1484:377;;;:::o;606:55::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1930:284::-;920:17;;;;;;;;;;;906:31;;:10;:31;;;898:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:1;2084:10;:20;2095:8;2084:20;;;;;;;;;;;;;;;:25;;2078:39;;;;;;;;;;;;;;;;:44;;2070:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:10;:20;2197:8;2186:20;;;;;;;;;;;;;;;;2179:27;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;1930:284;:::o;4210:145::-;4285:7;4312:9;:19;4322:8;4312:19;;;;;;;;;;;;;;;:29;;:35;4342:4;4312:35;;;;;;;;;;;;4305:42;;4210:145;;;;:::o;1265:112::-;808:5;;;;;;;;;;;794:19;;:10;:19;;;786:28;;;;;;;;1361:8;1341:17;;:28;;;;;;;;;;;;;;;;;;1265:112;:::o;3999:140::-;4064:4;4130:1;4094:9;:19;4104:8;4094:19;;;;;;;;;;;;;;;:24;;4088:38;;;;;;;;;;;;;;;;:43;;4081:50;;3999:140;;;:::o;2530:379::-;1063:15;;;;;;;;;;;1049:29;;:10;:29;;;1041:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2768:1;2733:9;:18;2743:7;2733:18;;;;;;;;;;;;;;;:23;;2727:37;;;;;;;;;;;;;;;;:42;2719:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2845:56;;;;;;;;;2871:4;2845:56;;;;2889:10;2845:56;;;;;2824:9;:18;2834:7;2824:18;;;;;;;;;;;;;;;:77;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2530:379;;;:::o;1149:108::-;808:5;;;;;;;;;;;794:19;;:10;:19;;;786:28;;;;;;;;1241:8;1223:15;;:26;;;;;;;;;;;;;;;;;;1149:108;:::o;2287:143::-;2354:4;2421:1;2384:10;:20;2395:8;2384:20;;;;;;;;;;;;;;;:25;;2378:39;;;;;;;;;;;;;;;;:44;;2371:51;;2287:143;;;:::o;83:4425::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\n//Data segregation for company and regulator profiles \r\ncontract UserDataStorage {\r\n    \r\n    struct RegulatorInformation {\r\n        string name;\r\n        string country;\r\n    }\r\n\r\n    struct CompanyInformation {\r\n        string name;\r\n        address approvedBy;\r\n        // maps year to emissions\r\n        mapping(uint256 => uint256) emissions;\r\n        // maps year to limit\r\n        mapping(uint256 => uint256) limits;\r\n    }\r\n\r\n    address owner;\r\n    address regulatorContract;\r\n    address companyContract;\r\n\r\n    mapping(address => RegulatorInformation) regulators;\r\n    mapping(address => CompanyInformation) public companies;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    // modifiers\r\n    modifier ownerOnly() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    modifier approvedRegulatorContractOnly() {\r\n        require(msg.sender == regulatorContract, 'Unauthorised address!');\r\n        _;\r\n    }\r\n\r\n    modifier approvedCompanyContractOnly() {\r\n        require(msg.sender == companyContract, 'Unathorised address!');\r\n        _;\r\n    }\r\n\r\n    // setters\r\n\r\n    function setCompanyContract(address _address) public ownerOnly {\r\n        companyContract = _address;\r\n    }\r\n\r\n    function setRegulatorContract(address _address) public ownerOnly {\r\n        regulatorContract = _address;\r\n    }\r\n\r\n    // ------ Regulator Functions ------\r\n\r\n    // add regulator to list of authorised regulators\r\n    function addRegulator(string memory name, string memory country, address _address) public approvedRegulatorContractOnly {\r\n        // ensure that regulator has not been authorised yet.\r\n        require(bytes(regulators[_address].name).length == 0, 'Regulator is already authorised!');\r\n        regulators[_address] = RegulatorInformation({name: name, country: country});\r\n    }\r\n\r\n    // remove regulators from list of authorised regulators\r\n    function removeRegulator(address _address) public approvedRegulatorContractOnly {\r\n        // Ensure that regulator is authorised.\r\n        require(bytes(regulators[_address].name).length != 0, 'Address is not an authorised regulator!');\r\n\r\n        delete regulators[_address];\r\n    }\r\n\r\n    // Getter functions\r\n\r\n    // true if regulator is approved\r\n    function isApprovedRegulator(address _address) public view returns(bool) {\r\n        return bytes(regulators[_address].name).length != 0;\r\n    }\r\n\r\n\r\n    // ------ Company functions ------\r\n\r\n    // to add company to approved company list\r\n    function addCompany(string memory name, address company, address approvedBy) public approvedCompanyContractOnly {\r\n        //ensure that address is not already an approved company\r\n        require(bytes(companies[company].name).length == 0, 'Address is already an approved Company!');\r\n        companies[company] = CompanyInformation({name: name, approvedBy: approvedBy});\r\n    }\r\n\r\n    // to remove company from approved company list\r\n    function removeCompany(address company) public approvedCompanyContractOnly {\r\n        // ensure that address is an approved company\r\n        require(bytes(companies[company].name).length != 0, 'Address is not an approved company!');\r\n\r\n        delete companies[company];\r\n    }\r\n\r\n    // To update campany carbon emissions for the year\r\n    function updateCompanyEmissions(address company, uint256 year, uint256 emissions) public approvedCompanyContractOnly {\r\n        // ensure that address is an approved company\r\n        require(bytes(companies[company].name).length != 0, 'Address is not an approved company!');\r\n\r\n        companies[company].emissions[year] = emissions;\r\n    }\r\n\r\n    function updateCompanyLimits(address company, uint256 year, uint256 limit) public approvedCompanyContractOnly {\r\n        require(bytes(companies[company].name).length != 0, 'Address is not an approved company!');\r\n\r\n        companies[company].limits[year] = limit;\r\n    }\r\n    // Getter functions\r\n\r\n    // true if company is approved\r\n    function isApprovedCompany(address _address) public view returns(bool) {\r\n        return bytes(companies[_address].name).length != 0;\r\n    }\r\n\r\n    // returns emission in specified year by company address.\r\n    function getEmissions(address _address, uint256 year) public view returns (uint256) {\r\n        return companies[_address].emissions[year];\r\n    }\r\n\r\n    function getLimit(address _address, uint256 year) public view returns (uint256) {\r\n        return companies[_address].limits[year];\r\n    }\r\n\r\n\r\n}\r\n\r\n",
  "sourcePath": "C:\\Users\\jared\\My Cloud\\NUS\\Y3S2\\IS4302\\Project\\CarbonCoin\\contracts\\UserDataStorage.sol",
>>>>>>> origin/CarbonToken
  "ast": {
    "absolutePath": "project:/contracts/UserDataStorage.sol",
    "exportedSymbols": {
      "UserDataStorage": [
<<<<<<< HEAD
        2396
      ]
    },
    "id": 2397,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2108,
=======
        2717
      ]
    },
    "id": 2718,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2358,
>>>>>>> origin/CarbonToken
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
<<<<<<< HEAD
        "id": 2396,
        "linearizedBaseContracts": [
          2396
=======
        "id": 2717,
        "linearizedBaseContracts": [
          2717
>>>>>>> origin/CarbonToken
        ],
        "name": "UserDataStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "UserDataStorage.RegulatorInformation",
<<<<<<< HEAD
            "id": 2113,
            "members": [
              {
                "constant": false,
                "id": 2110,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 2113,
                "src": "260:11:9",
=======
            "id": 2363,
            "members": [
              {
                "constant": false,
                "id": 2360,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 2363,
                "src": "160:11:9",
>>>>>>> origin/CarbonToken
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 2109,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "260:6:9",
=======
                  "id": 2359,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:6:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 2112,
                "name": "country",
                "nodeType": "VariableDeclaration",
                "scope": 2113,
                "src": "282:14:9",
=======
                "id": 2362,
                "name": "country",
                "nodeType": "VariableDeclaration",
                "scope": 2363,
                "src": "182:14:9",
>>>>>>> origin/CarbonToken
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 2111,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "282:6:9",
=======
                  "id": 2361,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:6:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "RegulatorInformation",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 2396,
            "src": "221:83:9",
=======
            "scope": 2717,
            "src": "121:83:9",
>>>>>>> origin/CarbonToken
            "visibility": "public"
          },
          {
            "canonicalName": "UserDataStorage.CompanyInformation",
<<<<<<< HEAD
            "id": 2122,
            "members": [
              {
                "constant": false,
                "id": 2115,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 2122,
                "src": "349:11:9",
=======
            "id": 2376,
            "members": [
              {
                "constant": false,
                "id": 2365,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 2376,
                "src": "249:11:9",
>>>>>>> origin/CarbonToken
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 2114,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "349:6:9",
=======
                  "id": 2364,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "249:6:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 2117,
                "name": "approvedBy",
                "nodeType": "VariableDeclaration",
                "scope": 2122,
                "src": "371:18:9",
=======
                "id": 2367,
                "name": "approvedBy",
                "nodeType": "VariableDeclaration",
                "scope": 2376,
                "src": "271:18:9",
>>>>>>> origin/CarbonToken
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 2116,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "371:7:9",
=======
                  "id": 2366,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:7:9",
>>>>>>> origin/CarbonToken
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
<<<<<<< HEAD
                "id": 2121,
                "name": "emissions",
                "nodeType": "VariableDeclaration",
                "scope": 2122,
                "src": "400:37:9",
=======
                "id": 2371,
                "name": "emissions",
                "nodeType": "VariableDeclaration",
                "scope": 2376,
                "src": "335:37:9",
>>>>>>> origin/CarbonToken
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "typeName": {
<<<<<<< HEAD
                  "id": 2120,
                  "keyType": {
                    "id": 2118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "408:7:9",
=======
                  "id": 2370,
                  "keyType": {
                    "id": 2368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
<<<<<<< HEAD
                  "src": "400:27:9",
=======
                  "src": "335:27:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
<<<<<<< HEAD
                    "id": 2119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:9",
=======
                    "id": 2369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 2375,
                "name": "limits",
                "nodeType": "VariableDeclaration",
                "scope": 2376,
                "src": "414:34:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "typeName": {
                  "id": 2374,
                  "keyType": {
                    "id": 2372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "414:27:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                    "typeString": "mapping(uint256 => uint256)"
                  },
                  "valueType": {
                    "id": 2373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "CompanyInformation",
            "nodeType": "StructDefinition",
<<<<<<< HEAD
            "scope": 2396,
            "src": "312:133:9",
=======
            "scope": 2717,
            "src": "212:244:9",
>>>>>>> origin/CarbonToken
            "visibility": "public"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 2124,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 2396,
            "src": "453:13:9",
=======
            "id": 2378,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 2717,
            "src": "464:13:9",
>>>>>>> origin/CarbonToken
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 2123,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "453:7:9",
=======
              "id": 2377,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "464:7:9",
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 2126,
            "name": "regulatorContract",
            "nodeType": "VariableDeclaration",
            "scope": 2396,
            "src": "473:25:9",
=======
            "id": 2380,
            "name": "regulatorContract",
            "nodeType": "VariableDeclaration",
            "scope": 2717,
            "src": "484:25:9",
>>>>>>> origin/CarbonToken
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 2125,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "473:7:9",
=======
              "id": 2379,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:9",
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 2128,
            "name": "companyContract",
            "nodeType": "VariableDeclaration",
            "scope": 2396,
            "src": "505:23:9",
=======
            "id": 2382,
            "name": "companyContract",
            "nodeType": "VariableDeclaration",
            "scope": 2717,
            "src": "516:23:9",
>>>>>>> origin/CarbonToken
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
<<<<<<< HEAD
              "id": 2127,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "505:7:9",
=======
              "id": 2381,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "516:7:9",
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 2132,
            "name": "regulators",
            "nodeType": "VariableDeclaration",
            "scope": 2396,
            "src": "537:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
              "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation)"
            },
            "typeName": {
              "id": 2131,
              "keyType": {
                "id": 2129,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "545:7:9",
=======
            "id": 2386,
            "name": "regulators",
            "nodeType": "VariableDeclaration",
            "scope": 2717,
            "src": "548:51:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
              "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation)"
            },
            "typeName": {
              "id": 2385,
              "keyType": {
                "id": 2383,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "556:7:9",
>>>>>>> origin/CarbonToken
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "537:40:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
=======
              "src": "548:40:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
>>>>>>> origin/CarbonToken
                "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation)"
              },
              "valueType": {
                "contractScope": null,
<<<<<<< HEAD
                "id": 2130,
                "name": "RegulatorInformation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2113,
                "src": "556:20:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage_ptr",
=======
                "id": 2384,
                "name": "RegulatorInformation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2363,
                "src": "567:20:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage_ptr",
>>>>>>> origin/CarbonToken
                  "typeString": "struct UserDataStorage.RegulatorInformation"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
<<<<<<< HEAD
            "id": 2136,
            "name": "companies",
            "nodeType": "VariableDeclaration",
            "scope": 2396,
            "src": "595:48:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
              "typeString": "mapping(address => struct UserDataStorage.CompanyInformation)"
            },
            "typeName": {
              "id": 2135,
              "keyType": {
                "id": 2133,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "603:7:9",
=======
            "id": 2390,
            "name": "companies",
            "nodeType": "VariableDeclaration",
            "scope": 2717,
            "src": "606:55:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
              "typeString": "mapping(address => struct UserDataStorage.CompanyInformation)"
            },
            "typeName": {
              "id": 2389,
              "keyType": {
                "id": 2387,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "614:7:9",
>>>>>>> origin/CarbonToken
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
<<<<<<< HEAD
              "src": "595:38:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
=======
              "src": "606:38:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
>>>>>>> origin/CarbonToken
                "typeString": "mapping(address => struct UserDataStorage.CompanyInformation)"
              },
              "valueType": {
                "contractScope": null,
<<<<<<< HEAD
                "id": 2134,
                "name": "CompanyInformation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2122,
                "src": "614:18:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage_ptr",
=======
                "id": 2388,
                "name": "CompanyInformation",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 2376,
                "src": "625:18:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage_ptr",
>>>>>>> origin/CarbonToken
                  "typeString": "struct UserDataStorage.CompanyInformation"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2144,
              "nodeType": "Block",
              "src": "673:37:9",
=======
              "id": 2398,
              "nodeType": "Block",
              "src": "691:37:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2142,
=======
                    "id": 2396,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 2139,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2124,
                      "src": "684:5:9",
=======
                      "id": 2393,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2378,
                      "src": "702:5:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2140,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2795,
                        "src": "692:3:9",
=======
                        "id": 2394,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3125,
                        "src": "710:3:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
<<<<<<< HEAD
                      "id": 2141,
=======
                      "id": 2395,
>>>>>>> origin/CarbonToken
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "692:10:9",
=======
                      "src": "710:10:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
<<<<<<< HEAD
                    "src": "684:18:9",
=======
                    "src": "702:18:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 2143,
                  "nodeType": "ExpressionStatement",
                  "src": "684:18:9"
=======
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "702:18:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2145,
=======
            "id": 2399,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "663:2:9"
            },
            "returnParameters": {
              "id": 2138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "673:0:9"
            },
            "scope": 2396,
            "src": "652:58:9",
=======
              "id": 2391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "681:2:9"
            },
            "returnParameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:9"
            },
            "scope": 2717,
            "src": "670:58:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2156,
              "nodeType": "Block",
              "src": "777:96:9",
=======
              "id": 2409,
              "nodeType": "Block",
              "src": "775:59:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 2151,
=======
                        "id": 2405,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 2148,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "796:3:9",
=======
                            "id": 2402,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "794:3:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 2149,
=======
                          "id": 2403,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "796:10:9",
=======
                          "src": "794:10:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2150,
                          "name": "regulatorContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2126,
                          "src": "810:17:9",
=======
                          "id": 2404,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2378,
                          "src": "808:5:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "796:31:9",
=======
                        "src": "794:19:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
<<<<<<< HEAD
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e617574686f7269736564206164647265737321",
                        "id": 2152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "829:23:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                          "typeString": "literal_string \"Unauthorised address!\""
                        },
                        "value": "Unauthorised address!"
=======
>>>>>>> origin/CarbonToken
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
<<<<<<< HEAD
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                          "typeString": "literal_string \"Unauthorised address!\""
                        }
                      ],
                      "id": 2147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "788:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2153,
=======
                        }
                      ],
                      "id": 2401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3128,
                      "src": "786:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2406,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "788:65:9",
=======
                    "src": "786:28:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2154,
                  "nodeType": "ExpressionStatement",
                  "src": "788:65:9"
                },
                {
                  "id": 2155,
                  "nodeType": "PlaceholderStatement",
                  "src": "864:1:9"
=======
                  "id": 2407,
                  "nodeType": "ExpressionStatement",
                  "src": "786:28:9"
                },
                {
                  "id": 2408,
                  "nodeType": "PlaceholderStatement",
                  "src": "825:1:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2157,
            "name": "approvedRegulatorContractOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:2:9"
            },
            "src": "736:137:9",
=======
            "id": 2410,
            "name": "ownerOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:9"
            },
            "src": "754:80:9",
>>>>>>> origin/CarbonToken
            "visibility": "internal"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2168,
              "nodeType": "Block",
              "src": "920:93:9",
=======
              "id": 2421,
              "nodeType": "Block",
              "src": "887:96:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
                        "id": 2163,
=======
                        "id": 2416,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 2160,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "939:3:9",
=======
                            "id": 2413,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "906:3:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
                          "id": 2161,
=======
                          "id": 2414,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "939:10:9",
=======
                          "src": "906:10:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2162,
                          "name": "companyContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2128,
                          "src": "953:15:9",
=======
                          "id": 2415,
                          "name": "regulatorContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2380,
                          "src": "920:17:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
                        "src": "939:29:9",
=======
                        "src": "906:31:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "hexValue": "556e6174686f7269736564206164647265737321",
                        "id": 2164,
=======
                        "hexValue": "556e617574686f7269736564206164647265737321",
                        "id": 2417,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "970:22:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                          "typeString": "literal_string \"Unathorised address!\""
                        },
                        "value": "Unathorised address!"
=======
                        "src": "939:23:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                          "typeString": "literal_string \"Unauthorised address!\""
                        },
                        "value": "Unauthorised address!"
>>>>>>> origin/CarbonToken
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                          "typeString": "literal_string \"Unathorised address!\""
                        }
                      ],
                      "id": 2159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "931:7:9",
=======
                          "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                          "typeString": "literal_string \"Unauthorised address!\""
                        }
                      ],
                      "id": 2412,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "898:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "898:65:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2419,
                  "nodeType": "ExpressionStatement",
                  "src": "898:65:9"
                },
                {
                  "id": 2420,
                  "nodeType": "PlaceholderStatement",
                  "src": "974:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 2422,
            "name": "approvedRegulatorContractOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:9"
            },
            "src": "846:137:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2433,
              "nodeType": "Block",
              "src": "1030:93:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2425,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3125,
                            "src": "1049:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1049:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2427,
                          "name": "companyContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2382,
                          "src": "1063:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1049:29:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "556e6174686f7269736564206164647265737321",
                        "id": 2429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1080:22:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                          "typeString": "literal_string \"Unathorised address!\""
                        },
                        "value": "Unathorised address!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                          "typeString": "literal_string \"Unathorised address!\""
                        }
                      ],
                      "id": 2424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "1041:7:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2165,
=======
                    "id": 2430,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "931:62:9",
=======
                    "src": "1041:62:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "931:62:9"
                },
                {
                  "id": 2167,
                  "nodeType": "PlaceholderStatement",
                  "src": "1004:1:9"
=======
                  "id": 2431,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:62:9"
                },
                {
                  "id": 2432,
                  "nodeType": "PlaceholderStatement",
                  "src": "1114:1:9"
                }
              ]
            },
            "documentation": null,
            "id": 2434,
            "name": "approvedCompanyContractOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:2:9"
            },
            "src": "991:132:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2445,
              "nodeType": "Block",
              "src": "1212:45:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2441,
                      "name": "companyContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2382,
                      "src": "1223:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2442,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2436,
                      "src": "1241:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1223:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2444,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:26:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2169,
            "name": "approvedCompanyContractOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2158,
=======
            "id": 2446,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2439,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2438,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2410,
                  "src": "1202:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1202:9:9"
              }
            ],
            "name": "setCompanyContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2437,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:2:9"
            },
            "src": "881:132:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2180,
              "nodeType": "Block",
              "src": "1042:89:9",
              "statements": [
                {
<<<<<<< HEAD
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2172,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2795,
                            "src": "1061:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1061:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2174,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2124,
                          "src": "1075:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1061:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20646f2074686973",
                        "id": 2176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1082:28:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a9ea3c4ab39badf5b6913b8759d81cccf6c4ab11997c9dcd6683c276566b80f",
                          "typeString": "literal_string \"Only the owner can do this\""
                        },
                        "value": "Only the owner can do this"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a9ea3c4ab39badf5b6913b8759d81cccf6c4ab11997c9dcd6683c276566b80f",
                          "typeString": "literal_string \"Only the owner can do this\""
                        }
                      ],
                      "id": 2171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "1053:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1053:58:9",
=======
                  "constant": false,
                  "id": 2436,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2446,
                  "src": "1177:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:9",
                    "stateMutability": "nonpayable",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2178,
                  "nodeType": "ExpressionStatement",
                  "src": "1053:58:9"
                },
                {
                  "id": 2179,
                  "nodeType": "PlaceholderStatement",
                  "src": "1122:1:9"
                }
<<<<<<< HEAD
              ]
            },
            "documentation": null,
            "id": 2181,
            "name": "ownerOnly",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:2:9"
            },
            "src": "1021:110:9",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "1263:45:9",
=======
              ],
              "src": "1176:18:9"
            },
            "returnParameters": {
              "id": 2440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:9"
            },
            "scope": 2717,
            "src": "1149:108:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2457,
              "nodeType": "Block",
              "src": "1330:47:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2190,
=======
                    "id": 2455,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 2188,
                      "name": "companyContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "1274:15:9",
=======
                      "id": 2453,
                      "name": "regulatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2380,
                      "src": "1341:17:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 2189,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2183,
                      "src": "1292:8:9",
=======
                      "id": 2454,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2448,
                      "src": "1361:8:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
<<<<<<< HEAD
                    "src": "1274:26:9",
=======
                    "src": "1341:28:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
<<<<<<< HEAD
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:26:9"
=======
                  "id": 2456,
                  "nodeType": "ExpressionStatement",
                  "src": "1341:28:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2193,
=======
            "id": 2458,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
                "arguments": [],
                "id": 2186,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2185,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2181,
                  "src": "1244:9:9",
=======
                "arguments": null,
                "id": 2451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2450,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2410,
                  "src": "1320:9:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "1244:11:9"
              }
            ],
            "name": "setCompanyContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2184,
=======
                "src": "1320:9:9"
              }
            ],
            "name": "setRegulatorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2449,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2183,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "1226:16:9",
=======
                  "id": 2448,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2458,
                  "src": "1295:16:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:7:9",
=======
                    "id": 2447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1295:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1225:18:9"
            },
            "returnParameters": {
              "id": 2187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:9"
            },
            "scope": 2396,
            "src": "1198:110:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2204,
              "nodeType": "Block",
              "src": "1383:47:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2200,
                      "name": "regulatorContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2126,
                      "src": "1394:17:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2201,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "1414:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1394:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2203,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:28:9"
                }
              ]
            },
            "documentation": null,
            "id": 2205,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 2198,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2197,
                  "name": "ownerOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2181,
                  "src": "1364:9:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1364:11:9"
              }
            ],
            "name": "setRegulatorContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2195,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2205,
                  "src": "1346:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
=======
              "src": "1294:18:9"
            },
            "returnParameters": {
              "id": 2452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1330:0:9"
            },
            "scope": 2717,
            "src": "1265:112:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2491,
              "nodeType": "Block",
              "src": "1604:257:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2471,
                                    "name": "regulators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2386,
                                    "src": "1692:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                    }
                                  },
                                  "id": 2473,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2472,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2464,
                                    "src": "1703:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1692:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                                    "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                                  }
                                },
                                "id": 2474,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2360,
                                "src": "1692:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 2470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1686:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 2475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1686:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 2476,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1686:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1729:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1686:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526567756c61746f7220697320616c726561647920617574686f726973656421",
                        "id": 2479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1732:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                          "typeString": "literal_string \"Regulator is already authorised!\""
                        },
                        "value": "Regulator is already authorised!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                          "typeString": "literal_string \"Regulator is already authorised!\""
                        }
                      ],
                      "id": 2469,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "1678:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1678:89:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2481,
                  "nodeType": "ExpressionStatement",
                  "src": "1678:89:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2482,
                        "name": "regulators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2386,
                        "src": "1778:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                        }
                      },
                      "id": 2484,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2483,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2464,
                        "src": "1789:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1778:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                        "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2486,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2460,
                          "src": "1829:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2487,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2462,
                          "src": "1844:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2485,
                        "name": "RegulatorInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "1801:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RegulatorInformation_$2363_storage_ptr_$",
                          "typeString": "type(struct UserDataStorage.RegulatorInformation storage pointer)"
                        }
                      },
                      "id": 2488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "name",
                        "country"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1801:52:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2363_memory",
                        "typeString": "struct UserDataStorage.RegulatorInformation memory"
                      }
                    },
                    "src": "1778:75:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                      "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                    }
                  },
                  "id": 2490,
                  "nodeType": "ExpressionStatement",
                  "src": "1778:75:9"
                }
              ]
            },
            "documentation": null,
            "id": 2492,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2467,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2466,
                  "name": "approvedRegulatorContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2422,
                  "src": "1574:29:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1574:29:9"
              }
            ],
            "name": "addRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2460,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "1506:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2462,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "1526:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2464,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2492,
                  "src": "1549:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1549:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
>>>>>>> origin/CarbonToken
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1345:18:9"
            },
            "returnParameters": {
              "id": 2199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1383:0:9"
            },
            "scope": 2396,
            "src": "1316:114:9",
=======
              "src": "1505:61:9"
            },
            "returnParameters": {
              "id": 2468,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1604:0:9"
            },
            "scope": 2717,
            "src": "1484:377:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2238,
              "nodeType": "Block",
              "src": "1643:257:9",
=======
              "id": 2517,
              "nodeType": "Block",
              "src": "2010:204:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2225,
=======
                        "id": 2508,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 2218,
                                    "name": "regulators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2132,
                                    "src": "1731:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                    }
                                  },
                                  "id": 2220,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2219,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2211,
                                    "src": "1742:8:9",
=======
                                    "id": 2501,
                                    "name": "regulators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2386,
                                    "src": "2084:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                    }
                                  },
                                  "id": 2503,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2502,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2494,
                                    "src": "2095:8:9",
>>>>>>> origin/CarbonToken
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "1731:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                                    "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                                  }
                                },
                                "id": 2221,
=======
                                  "src": "2084:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                                    "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                                  }
                                },
                                "id": 2504,
>>>>>>> origin/CarbonToken
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 2110,
                                "src": "1731:25:9",
=======
                                "referencedDeclaration": 2360,
                                "src": "2084:25:9",
>>>>>>> origin/CarbonToken
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
<<<<<<< HEAD
                              "id": 2217,
=======
                              "id": 2500,
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "1725:5:9",
=======
                              "src": "2078:5:9",
>>>>>>> origin/CarbonToken
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
<<<<<<< HEAD
                            "id": 2222,
=======
                            "id": 2505,
>>>>>>> origin/CarbonToken
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "1725:32:9",
=======
                            "src": "2078:32:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
<<<<<<< HEAD
                          "id": 2223,
=======
                          "id": 2506,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "1725:39:9",
=======
                          "src": "2078:39:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
<<<<<<< HEAD
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2224,
=======
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2507,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "1768:1:9",
=======
                          "src": "2121:1:9",
>>>>>>> origin/CarbonToken
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "1725:44:9",
=======
                        "src": "2078:44:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "hexValue": "526567756c61746f7220697320616c726561647920617574686f726973656421",
                        "id": 2226,
=======
                        "hexValue": "41646472657373206973206e6f7420616e20617574686f726973656420726567756c61746f7221",
                        "id": 2509,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "1771:34:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                          "typeString": "literal_string \"Regulator is already authorised!\""
                        },
                        "value": "Regulator is already authorised!"
=======
                        "src": "2124:41:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                          "typeString": "literal_string \"Address is not an authorised regulator!\""
                        },
                        "value": "Address is not an authorised regulator!"
>>>>>>> origin/CarbonToken
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
<<<<<<< HEAD
                          "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                          "typeString": "literal_string \"Regulator is already authorised!\""
                        }
                      ],
                      "id": 2216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "1717:7:9",
=======
                          "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                          "typeString": "literal_string \"Address is not an authorised regulator!\""
                        }
                      ],
                      "id": 2499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "2070:7:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2227,
=======
                    "id": 2510,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "1717:89:9",
=======
                    "src": "2070:96:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2228,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:89:9"
=======
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:96:9"
>>>>>>> origin/CarbonToken
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2236,
=======
                    "id": 2515,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
<<<<<<< HEAD
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2229,
                        "name": "regulators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2132,
                        "src": "1817:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                        }
                      },
                      "id": 2231,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2230,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2211,
                        "src": "1828:8:9",
=======
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2179:27:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2512,
                        "name": "regulators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2386,
                        "src": "2186:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                        }
                      },
                      "id": 2514,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2513,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2494,
                        "src": "2197:8:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "1817:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                        "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2233,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2207,
                          "src": "1868:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 2234,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2209,
                          "src": "1883:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2232,
                        "name": "RegulatorInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2113,
                        "src": "1840:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RegulatorInformation_$2113_storage_ptr_$",
                          "typeString": "type(struct UserDataStorage.RegulatorInformation storage pointer)"
                        }
                      },
                      "id": 2235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "name",
                        "country"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1840:52:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2113_memory",
                        "typeString": "struct UserDataStorage.RegulatorInformation memory"
                      }
                    },
                    "src": "1817:75:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                      "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                    }
                  },
                  "id": 2237,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:75:9"
=======
                      "src": "2186:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                        "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2516,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:27:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2239,
=======
            "id": 2518,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 2214,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2213,
                  "name": "approvedRegulatorContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2157,
                  "src": "1613:29:9",
=======
                "id": 2497,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2496,
                  "name": "approvedRegulatorContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2422,
                  "src": "1980:29:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "1613:29:9"
              }
            ],
            "name": "addRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2212,
=======
                "src": "1980:29:9"
              }
            ],
            "name": "removeRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2495,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2207,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "1545:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2206,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2209,
                  "name": "country",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "1565:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2208,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2211,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2239,
                  "src": "1588:16:9",
=======
                  "id": 2494,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2518,
                  "src": "1955:16:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1588:7:9",
=======
                    "id": 2493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "1544:61:9"
            },
            "returnParameters": {
              "id": 2215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1643:0:9"
            },
            "scope": 2396,
            "src": "1523:377:9",
=======
              "src": "1954:18:9"
            },
            "returnParameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2010:0:9"
            },
            "scope": 2717,
            "src": "1930:284:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2264,
              "nodeType": "Block",
              "src": "2049:204:9",
=======
              "id": 2535,
              "nodeType": "Block",
              "src": "2360:70:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2248,
                                    "name": "regulators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2132,
                                    "src": "2123:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                    }
                                  },
                                  "id": 2250,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2249,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2241,
                                    "src": "2134:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2123:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                                    "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                                  }
                                },
                                "id": 2251,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2110,
                                "src": "2123:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2117:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 2252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2117:32:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 2253,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2117:39:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2160:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2117:44:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420616e20617574686f726973656420726567756c61746f7221",
                        "id": 2256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2163:41:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                          "typeString": "literal_string \"Address is not an authorised regulator!\""
                        },
                        "value": "Address is not an authorised regulator!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                          "typeString": "literal_string \"Address is not an authorised regulator!\""
                        }
                      ],
                      "id": 2246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "2109:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:96:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2258,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:96:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2218:27:9",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2259,
                        "name": "regulators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2132,
                        "src": "2225:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                        }
                      },
                      "id": 2261,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2260,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2241,
                        "src": "2236:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2225:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                        "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2263,
                  "nodeType": "ExpressionStatement",
                  "src": "2218:27:9"
                }
              ]
            },
            "documentation": null,
            "id": 2265,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2244,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2243,
                  "name": "approvedRegulatorContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2157,
                  "src": "2019:29:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2019:29:9"
              }
            ],
            "name": "removeRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2241,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "1994:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1993:18:9"
            },
            "returnParameters": {
              "id": 2245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2049:0:9"
            },
            "scope": 2396,
            "src": "1969:284:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2282,
              "nodeType": "Block",
              "src": "2435:70:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2273,
                                "name": "regulators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2132,
                                "src": "2459:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2113_storage_$",
                                  "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                }
                              },
                              "id": 2275,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2274,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2267,
                                "src": "2470:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2459:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RegulatorInformation_$2113_storage",
                                "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                              }
                            },
                            "id": 2276,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2110,
                            "src": "2459:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2453:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2277,
=======
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2526,
                                "name": "regulators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2386,
                                "src": "2384:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RegulatorInformation_$2363_storage_$",
                                  "typeString": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)"
                                }
                              },
                              "id": 2528,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2527,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2520,
                                "src": "2395:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2384:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RegulatorInformation_$2363_storage",
                                "typeString": "struct UserDataStorage.RegulatorInformation storage ref"
                              }
                            },
                            "id": 2529,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2360,
                            "src": "2384:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2378:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2530,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
                        "src": "2453:32:9",
=======
                        "src": "2378:32:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
<<<<<<< HEAD
                      "id": 2278,
=======
                      "id": 2531,
>>>>>>> origin/CarbonToken
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
<<<<<<< HEAD
                      "src": "2453:39:9",
=======
                      "src": "2378:39:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
<<<<<<< HEAD
                      "id": 2279,
=======
                      "id": 2532,
>>>>>>> origin/CarbonToken
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
<<<<<<< HEAD
                      "src": "2496:1:9",
=======
                      "src": "2421:1:9",
>>>>>>> origin/CarbonToken
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
<<<<<<< HEAD
                    "src": "2453:44:9",
=======
                    "src": "2378:44:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
                  "functionReturnParameters": 2271,
                  "id": 2281,
                  "nodeType": "Return",
                  "src": "2446:51:9"
=======
                  "functionReturnParameters": 2524,
                  "id": 2534,
                  "nodeType": "Return",
                  "src": "2371:51:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2283,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorisedRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2268,
=======
            "id": 2536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedRegulator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2521,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2267,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "2391:16:9",
=======
                  "id": 2520,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "2316:16:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2391:7:9",
=======
                    "id": 2519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2316:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2390:18:9"
            },
            "returnParameters": {
              "id": 2271,
=======
              "src": "2315:18:9"
            },
            "returnParameters": {
              "id": 2524,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2270,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2283,
                  "src": "2429:4:9",
=======
                  "id": 2523,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2536,
                  "src": "2354:4:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2269,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:4:9",
=======
                    "id": 2522,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2354:4:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2428:6:9"
            },
            "scope": 2396,
            "src": "2360:145:9",
=======
              "src": "2353:6:9"
            },
            "scope": 2717,
            "src": "2287:143:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2316,
              "nodeType": "Block",
              "src": "2701:267:9",
=======
              "id": 2569,
              "nodeType": "Block",
              "src": "2642:267:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2303,
=======
                        "id": 2556,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 2296,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "2792:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2298,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2297,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2287,
                                    "src": "2802:7:9",
=======
                                    "id": 2549,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2390,
                                    "src": "2733:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2551,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2550,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2540,
                                    "src": "2743:7:9",
>>>>>>> origin/CarbonToken
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "2792:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2299,
=======
                                  "src": "2733:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2552,
>>>>>>> origin/CarbonToken
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 2115,
                                "src": "2792:23:9",
=======
                                "referencedDeclaration": 2365,
                                "src": "2733:23:9",
>>>>>>> origin/CarbonToken
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
<<<<<<< HEAD
                              "id": 2295,
=======
                              "id": 2548,
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "2786:5:9",
=======
                              "src": "2727:5:9",
>>>>>>> origin/CarbonToken
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
<<<<<<< HEAD
                            "id": 2300,
=======
                            "id": 2553,
>>>>>>> origin/CarbonToken
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "2786:30:9",
=======
                            "src": "2727:30:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
<<<<<<< HEAD
                          "id": 2301,
=======
                          "id": 2554,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "2786:37:9",
=======
                          "src": "2727:37:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 2302,
=======
                          "id": 2555,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "2827:1:9",
=======
                          "src": "2768:1:9",
>>>>>>> origin/CarbonToken
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "2786:42:9",
=======
                        "src": "2727:42:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4164647265737320697320616c726561647920616e20617070726f76656420436f6d70616e7921",
<<<<<<< HEAD
                        "id": 2304,
=======
                        "id": 2557,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "2830:41:9",
=======
                        "src": "2771:41:9",
>>>>>>> origin/CarbonToken
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b1d0551048908da3e4ebdbb164a69e583266041f25e9d22df1810ea960aee1b",
                          "typeString": "literal_string \"Address is already an approved Company!\""
                        },
                        "value": "Address is already an approved Company!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b1d0551048908da3e4ebdbb164a69e583266041f25e9d22df1810ea960aee1b",
                          "typeString": "literal_string \"Address is already an approved Company!\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 2294,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "2778:7:9",
=======
                      "id": 2547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "2719:7:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2305,
=======
                    "id": 2558,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "2778:94:9",
=======
                    "src": "2719:94:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "2778:94:9"
=======
                  "id": 2559,
                  "nodeType": "ExpressionStatement",
                  "src": "2719:94:9"
>>>>>>> origin/CarbonToken
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2314,
=======
                    "id": 2567,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2307,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2136,
                        "src": "2883:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                        }
                      },
                      "id": 2309,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2308,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2287,
                        "src": "2893:7:9",
=======
                        "id": 2560,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2390,
                        "src": "2824:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                        }
                      },
                      "id": 2562,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2561,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2540,
                        "src": "2834:7:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "2883:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
=======
                      "src": "2824:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
>>>>>>> origin/CarbonToken
                        "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2311,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2285,
                          "src": "2930:4:9",
=======
                          "id": 2564,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2538,
                          "src": "2871:4:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
<<<<<<< HEAD
                          "id": 2312,
                          "name": "approvedBy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2289,
                          "src": "2948:10:9",
=======
                          "id": 2565,
                          "name": "approvedBy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2542,
                          "src": "2889:10:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2310,
                        "name": "CompanyInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2122,
                        "src": "2904:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CompanyInformation_$2122_storage_ptr_$",
                          "typeString": "type(struct UserDataStorage.CompanyInformation storage pointer)"
                        }
                      },
                      "id": 2313,
=======
                        "id": 2563,
                        "name": "CompanyInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2376,
                        "src": "2845:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_CompanyInformation_$2376_storage_ptr_$",
                          "typeString": "type(struct UserDataStorage.CompanyInformation storage pointer)"
                        }
                      },
                      "id": 2566,
>>>>>>> origin/CarbonToken
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "name",
                        "approvedBy"
                      ],
                      "nodeType": "FunctionCall",
<<<<<<< HEAD
                      "src": "2904:56:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2122_memory",
                        "typeString": "struct UserDataStorage.CompanyInformation memory"
                      }
                    },
                    "src": "2883:77:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                      "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:77:9"
=======
                      "src": "2845:56:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2376_memory",
                        "typeString": "struct UserDataStorage.CompanyInformation memory"
                      }
                    },
                    "src": "2824:77:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                      "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                    }
                  },
                  "id": 2568,
                  "nodeType": "ExpressionStatement",
                  "src": "2824:77:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2317,
=======
            "id": 2570,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 2292,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2291,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2169,
                  "src": "2673:27:9",
=======
                "id": 2545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2544,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2434,
                  "src": "2614:27:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "2673:27:9"
=======
                "src": "2614:27:9"
>>>>>>> origin/CarbonToken
              }
            ],
            "name": "addCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2290,
=======
              "id": 2543,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2285,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2609:18:9",
=======
                  "id": 2538,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2570,
                  "src": "2550:18:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2284,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:6:9",
=======
                    "id": 2537,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2287,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2629:15:9",
=======
                  "id": 2540,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2570,
                  "src": "2570:15:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2629:7:9",
=======
                    "id": 2539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2289,
                  "name": "approvedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2317,
                  "src": "2646:18:9",
=======
                  "id": 2542,
                  "name": "approvedBy",
                  "nodeType": "VariableDeclaration",
                  "scope": 2570,
                  "src": "2587:18:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:9",
=======
                    "id": 2541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2587:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "2608:57:9"
            },
            "returnParameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2701:0:9"
            },
            "scope": 2396,
            "src": "2589:379:9",
=======
              "src": "2549:57:9"
            },
            "returnParameters": {
              "id": 2546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2642:0:9"
            },
            "scope": 2717,
            "src": "2530:379:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2342,
              "nodeType": "Block",
              "src": "3104:202:9",
=======
              "id": 2595,
              "nodeType": "Block",
              "src": "3045:202:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2333,
=======
                        "id": 2586,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 2326,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "3184:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2328,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2327,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2319,
                                    "src": "3194:7:9",
=======
                                    "id": 2579,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2390,
                                    "src": "3125:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2581,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2580,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2572,
                                    "src": "3135:7:9",
>>>>>>> origin/CarbonToken
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "3184:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2329,
=======
                                  "src": "3125:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2582,
>>>>>>> origin/CarbonToken
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 2115,
                                "src": "3184:23:9",
=======
                                "referencedDeclaration": 2365,
                                "src": "3125:23:9",
>>>>>>> origin/CarbonToken
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
<<<<<<< HEAD
                              "id": 2325,
=======
                              "id": 2578,
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3178:5:9",
=======
                              "src": "3119:5:9",
>>>>>>> origin/CarbonToken
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
<<<<<<< HEAD
                            "id": 2330,
=======
                            "id": 2583,
>>>>>>> origin/CarbonToken
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3178:30:9",
=======
                            "src": "3119:30:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
<<<<<<< HEAD
                          "id": 2331,
=======
                          "id": 2584,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3178:37:9",
=======
                          "src": "3119:37:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 2332,
=======
                          "id": 2585,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3219:1:9",
=======
                          "src": "3160:1:9",
>>>>>>> origin/CarbonToken
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3178:42:9",
=======
                        "src": "3119:42:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
<<<<<<< HEAD
                        "id": 2334,
=======
                        "id": 2587,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3222:37:9",
=======
                        "src": "3163:37:9",
>>>>>>> origin/CarbonToken
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        },
                        "value": "Address is not an approved company!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 2324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "3170:7:9",
=======
                      "id": 2577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "3111:7:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2335,
=======
                    "id": 2588,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3170:90:9",
=======
                    "src": "3111:90:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:90:9"
=======
                  "id": 2589,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:90:9"
>>>>>>> origin/CarbonToken
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2340,
=======
                    "id": 2593,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
<<<<<<< HEAD
                    "src": "3273:25:9",
=======
                    "src": "3214:25:9",
>>>>>>> origin/CarbonToken
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
<<<<<<< HEAD
                        "id": 2337,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2136,
                        "src": "3280:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                        }
                      },
                      "id": 2339,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2338,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2319,
                        "src": "3290:7:9",
=======
                        "id": 2590,
                        "name": "companies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2390,
                        "src": "3221:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                          "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                        }
                      },
                      "id": 2592,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2591,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2572,
                        "src": "3231:7:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3280:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
=======
                      "src": "3221:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
>>>>>>> origin/CarbonToken
                        "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2341,
                  "nodeType": "ExpressionStatement",
                  "src": "3273:25:9"
=======
                  "id": 2594,
                  "nodeType": "ExpressionStatement",
                  "src": "3214:25:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2343,
=======
            "id": 2596,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 2322,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2321,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2169,
                  "src": "3076:27:9",
=======
                "id": 2575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2574,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2434,
                  "src": "3017:27:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3076:27:9"
=======
                "src": "3017:27:9"
>>>>>>> origin/CarbonToken
              }
            ],
            "name": "removeCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2320,
=======
              "id": 2573,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2319,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2343,
                  "src": "3052:15:9",
=======
                  "id": 2572,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2596,
                  "src": "2993:15:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3052:7:9",
=======
                    "id": 2571,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3051:17:9"
            },
            "returnParameters": {
              "id": 2323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3104:0:9"
            },
            "scope": 2396,
            "src": "3029:277:9",
=======
              "src": "2992:17:9"
            },
            "returnParameters": {
              "id": 2576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3045:0:9"
            },
            "scope": 2717,
            "src": "2970:277:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2376,
              "nodeType": "Block",
              "src": "3487:223:9",
=======
              "id": 2629,
              "nodeType": "Block",
              "src": "3428:223:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2363,
=======
                        "id": 2616,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
<<<<<<< HEAD
                                    "id": 2356,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2136,
                                    "src": "3567:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2358,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2357,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2345,
                                    "src": "3577:7:9",
=======
                                    "id": 2609,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2390,
                                    "src": "3508:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2611,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2610,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2598,
                                    "src": "3518:7:9",
>>>>>>> origin/CarbonToken
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
<<<<<<< HEAD
                                  "src": "3567:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2359,
=======
                                  "src": "3508:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2612,
>>>>>>> origin/CarbonToken
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
<<<<<<< HEAD
                                "referencedDeclaration": 2115,
                                "src": "3567:23:9",
=======
                                "referencedDeclaration": 2365,
                                "src": "3508:23:9",
>>>>>>> origin/CarbonToken
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
<<<<<<< HEAD
                              "id": 2355,
=======
                              "id": 2608,
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                              "src": "3561:5:9",
=======
                              "src": "3502:5:9",
>>>>>>> origin/CarbonToken
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
<<<<<<< HEAD
                            "id": 2360,
=======
                            "id": 2613,
>>>>>>> origin/CarbonToken
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
<<<<<<< HEAD
                            "src": "3561:30:9",
=======
                            "src": "3502:30:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
<<<<<<< HEAD
                          "id": 2361,
=======
                          "id": 2614,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
<<<<<<< HEAD
                          "src": "3561:37:9",
=======
                          "src": "3502:37:9",
>>>>>>> origin/CarbonToken
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
<<<<<<< HEAD
                          "id": 2362,
=======
                          "id": 2615,
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
<<<<<<< HEAD
                          "src": "3602:1:9",
=======
                          "src": "3543:1:9",
>>>>>>> origin/CarbonToken
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
<<<<<<< HEAD
                        "src": "3561:42:9",
=======
                        "src": "3502:42:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
<<<<<<< HEAD
                        "id": 2364,
=======
                        "id": 2617,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
                        "src": "3605:37:9",
=======
                        "src": "3546:37:9",
>>>>>>> origin/CarbonToken
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        },
                        "value": "Address is not an approved company!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        }
                      ],
<<<<<<< HEAD
                      "id": 2354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2798,
                        2799
                      ],
                      "referencedDeclaration": 2799,
                      "src": "3553:7:9",
=======
                      "id": 2607,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "3494:7:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
                    "id": 2365,
=======
                    "id": 2618,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
                    "src": "3553:90:9",
=======
                    "src": "3494:90:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
                  "id": 2366,
                  "nodeType": "ExpressionStatement",
                  "src": "3553:90:9"
=======
                  "id": 2619,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:90:9"
>>>>>>> origin/CarbonToken
                },
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "id": 2374,
=======
                    "id": 2627,
>>>>>>> origin/CarbonToken
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
<<<<<<< HEAD
                            "id": 2367,
                            "name": "companies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2136,
                            "src": "3656:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                              "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                            }
                          },
                          "id": 2369,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2368,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2345,
                            "src": "3666:7:9",
=======
                            "id": 2620,
                            "name": "companies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2390,
                            "src": "3597:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                              "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                            }
                          },
                          "id": 2622,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2621,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2598,
                            "src": "3607:7:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
                          "src": "3656:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                            "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                          }
                        },
                        "id": 2370,
=======
                          "src": "3597:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                            "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                          }
                        },
                        "id": 2623,
>>>>>>> origin/CarbonToken
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "emissions",
                        "nodeType": "MemberAccess",
<<<<<<< HEAD
                        "referencedDeclaration": 2121,
                        "src": "3656:28:9",
=======
                        "referencedDeclaration": 2371,
                        "src": "3597:28:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
<<<<<<< HEAD
                      "id": 2372,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2371,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2347,
                        "src": "3685:4:9",
=======
                      "id": 2625,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2624,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2600,
                        "src": "3626:4:9",
>>>>>>> origin/CarbonToken
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
<<<<<<< HEAD
                      "src": "3656:34:9",
=======
                      "src": "3597:34:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
<<<<<<< HEAD
                      "id": 2373,
                      "name": "emissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2349,
                      "src": "3693:9:9",
=======
                      "id": 2626,
                      "name": "emissions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2602,
                      "src": "3634:9:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "src": "3656:46:9",
=======
                    "src": "3597:46:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
<<<<<<< HEAD
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "3656:46:9"
=======
                  "id": 2628,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:46:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2377,
=======
            "id": 2630,
>>>>>>> origin/CarbonToken
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
<<<<<<< HEAD
                "id": 2352,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2351,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2169,
                  "src": "3459:27:9",
=======
                "id": 2605,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2604,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2434,
                  "src": "3400:27:9",
>>>>>>> origin/CarbonToken
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
<<<<<<< HEAD
                "src": "3459:27:9"
=======
                "src": "3400:27:9"
>>>>>>> origin/CarbonToken
              }
            ],
            "name": "updateCompanyEmissions",
            "nodeType": "FunctionDefinition",
            "parameters": {
<<<<<<< HEAD
              "id": 2350,
=======
              "id": 2603,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2345,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "3402:15:9",
=======
                  "id": 2598,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2630,
                  "src": "3343:15:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:9",
=======
                    "id": 2597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3343:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2347,
                  "name": "year",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "3419:12:9",
=======
                  "id": 2600,
                  "name": "year",
                  "nodeType": "VariableDeclaration",
                  "scope": 2630,
                  "src": "3360:12:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:9",
=======
                    "id": 2599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2349,
                  "name": "emissions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2377,
                  "src": "3433:17:9",
=======
                  "id": 2602,
                  "name": "emissions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2630,
                  "src": "3374:17:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:7:9",
=======
                    "id": 2601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:7:9",
>>>>>>> origin/CarbonToken
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3401:50:9"
            },
            "returnParameters": {
              "id": 2353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3487:0:9"
            },
            "scope": 2396,
            "src": "3370:340:9",
=======
              "src": "3342:50:9"
            },
            "returnParameters": {
              "id": 2606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3428:0:9"
            },
            "scope": 2717,
            "src": "3311:340:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
<<<<<<< HEAD
              "id": 2394,
              "nodeType": "Block",
              "src": "3847:69:9",
=======
              "id": 2663,
              "nodeType": "Block",
              "src": "3769:161:9",
>>>>>>> origin/CarbonToken
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
<<<<<<< HEAD
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2385,
                                "name": "companies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2136,
                                "src": "3871:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2122_storage_$",
                                  "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                }
                              },
                              "id": 2387,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2386,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2379,
                                "src": "3881:8:9",
=======
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 2643,
                                    "name": "companies",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2390,
                                    "src": "3794:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                                      "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                    }
                                  },
                                  "id": 2645,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 2644,
                                    "name": "company",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2632,
                                    "src": "3804:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3794:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                                    "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                                  }
                                },
                                "id": 2646,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "name",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2365,
                                "src": "3794:23:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 2642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3788:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 2647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3788:30:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 2648,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3788:37:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 2649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3829:1:9",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3788:42:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
                        "id": 2651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3832:37:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        },
                        "value": "Address is not an approved company!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                          "typeString": "literal_string \"Address is not an approved company!\""
                        }
                      ],
                      "id": 2641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3128,
                        3129
                      ],
                      "referencedDeclaration": 3129,
                      "src": "3780:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:90:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2653,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:90:9"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2654,
                            "name": "companies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2390,
                            "src": "3883:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                              "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                            }
                          },
                          "id": 2656,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2655,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2632,
                            "src": "3893:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3883:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                            "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                          }
                        },
                        "id": 2657,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "limits",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2375,
                        "src": "3883:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 2659,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2658,
                        "name": "year",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2634,
                        "src": "3909:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3883:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2660,
                      "name": "limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2636,
                      "src": "3917:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3883:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2662,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:39:9"
                }
              ]
            },
            "documentation": null,
            "id": 2664,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2639,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2638,
                  "name": "approvedCompanyContractOnly",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2434,
                  "src": "3741:27:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3741:27:9"
              }
            ],
            "name": "updateCompanyLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2632,
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3688:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2631,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3688:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2634,
                  "name": "year",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3705:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2636,
                  "name": "limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 2664,
                  "src": "3719:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3687:46:9"
            },
            "returnParameters": {
              "id": 2640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3769:0:9"
            },
            "scope": 2717,
            "src": "3659:271:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2681,
              "nodeType": "Block",
              "src": "4070:69:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2672,
                                "name": "companies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2390,
                                "src": "4094:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                                  "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                                }
                              },
                              "id": 2674,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2673,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2666,
                                "src": "4104:8:9",
>>>>>>> origin/CarbonToken
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
                              "src": "3871:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CompanyInformation_$2122_storage",
                                "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                              }
                            },
                            "id": 2388,
=======
                              "src": "4094:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                                "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                              }
                            },
                            "id": 2675,
>>>>>>> origin/CarbonToken
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "name",
                            "nodeType": "MemberAccess",
<<<<<<< HEAD
                            "referencedDeclaration": 2115,
                            "src": "3871:24:9",
=======
                            "referencedDeclaration": 2365,
                            "src": "4094:24:9",
>>>>>>> origin/CarbonToken
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
<<<<<<< HEAD
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3865:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3865:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2390,
=======
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 2671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4088:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 2676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4088:31:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 2677,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4088:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4130:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4088:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2670,
                  "id": 2680,
                  "nodeType": "Return",
                  "src": "4081:50:9"
                }
              ]
            },
            "documentation": null,
            "id": 2682,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2666,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "4026:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4026:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4025:18:9"
            },
            "returnParameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2669,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2682,
                  "src": "4064:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4063:6:9"
            },
            "scope": 2717,
            "src": "3999:140:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2698,
              "nodeType": "Block",
              "src": "4294:61:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2691,
                          "name": "companies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2390,
                          "src": "4312:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                            "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                          }
                        },
                        "id": 2693,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2692,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2684,
                          "src": "4322:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4312:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                          "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                        }
                      },
                      "id": 2694,
>>>>>>> origin/CarbonToken
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
<<<<<<< HEAD
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3865:38:9",
=======
                      "memberName": "emissions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2371,
                      "src": "4312:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2696,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2695,
                      "name": "year",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2686,
                      "src": "4342:4:9",
>>>>>>> origin/CarbonToken
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3907:1:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3865:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2383,
                  "id": 2393,
                  "nodeType": "Return",
                  "src": "3858:50:9"
=======
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4312:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2690,
                  "id": 2697,
                  "nodeType": "Return",
                  "src": "4305:42:9"
                }
              ]
            },
            "documentation": null,
            "id": 2699,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmissions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2684,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4232:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4232:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2686,
                  "name": "year",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4250:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2685,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4250:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4231:32:9"
            },
            "returnParameters": {
              "id": 2690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2689,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4285:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4285:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4284:9:9"
            },
            "scope": 2717,
            "src": "4210:145:9",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2715,
              "nodeType": "Block",
              "src": "4443:58:9",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2708,
                          "name": "companies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2390,
                          "src": "4461:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_CompanyInformation_$2376_storage_$",
                            "typeString": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)"
                          }
                        },
                        "id": 2710,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2709,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2701,
                          "src": "4471:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4461:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CompanyInformation_$2376_storage",
                          "typeString": "struct UserDataStorage.CompanyInformation storage ref"
                        }
                      },
                      "id": 2711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "limits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2375,
                      "src": "4461:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 2713,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2712,
                      "name": "year",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2703,
                      "src": "4488:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4461:32:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2707,
                  "id": 2714,
                  "nodeType": "Return",
                  "src": "4454:39:9"
>>>>>>> origin/CarbonToken
                }
              ]
            },
            "documentation": null,
<<<<<<< HEAD
            "id": 2395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2380,
=======
            "id": 2716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2704,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2379,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2395,
                  "src": "3803:16:9",
=======
                  "id": 2701,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "4381:16:9",
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
<<<<<<< HEAD
                    "id": 2378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3803:7:9",
=======
                    "id": 2700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4381:7:9",
>>>>>>> origin/CarbonToken
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
<<<<<<< HEAD
                }
              ],
              "src": "3802:18:9"
            },
            "returnParameters": {
              "id": 2383,
=======
                },
                {
                  "constant": false,
                  "id": 2703,
                  "name": "year",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "4399:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4380:32:9"
            },
            "returnParameters": {
              "id": 2707,
>>>>>>> origin/CarbonToken
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
                  "id": 2382,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2395,
                  "src": "3841:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3841:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
=======
                  "id": 2706,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2716,
                  "src": "4434:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4434:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
>>>>>>> origin/CarbonToken
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
              "src": "3840:6:9"
            },
            "scope": 2396,
            "src": "3776:140:9",
=======
              "src": "4433:9:9"
            },
            "scope": 2717,
            "src": "4363:138:9",
>>>>>>> origin/CarbonToken
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
<<<<<<< HEAD
        "scope": 2397,
        "src": "83:3838:9"
      }
    ],
    "src": "0:3925:9"
=======
        "scope": 2718,
        "src": "83:4425:9"
      }
    ],
    "src": "0:4512:9"
>>>>>>> origin/CarbonToken
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/UserDataStorage.sol",
      "exportedSymbols": {
        "UserDataStorage": [
<<<<<<< HEAD
          2396
=======
          2717
>>>>>>> origin/CarbonToken
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
<<<<<<< HEAD
        "id": 2108,
=======
        "id": 2358,
>>>>>>> origin/CarbonToken
        "name": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
<<<<<<< HEAD
            2396
          ],
          "name": "UserDataStorage",
          "scope": 2397
=======
            2717
          ],
          "name": "UserDataStorage",
          "scope": 2718
>>>>>>> origin/CarbonToken
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "UserDataStorage.RegulatorInformation",
              "name": "RegulatorInformation",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
<<<<<<< HEAD
                  "scope": 2113,
=======
                  "scope": 2363,
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
<<<<<<< HEAD
                    "id": 2109,
                    "name": "ElementaryTypeName",
                    "src": "260:6:9"
                  }
                ],
                "id": 2110,
                "name": "VariableDeclaration",
                "src": "260:11:9"
=======
                    "id": 2359,
                    "name": "ElementaryTypeName",
                    "src": "160:6:9"
                  }
                ],
                "id": 2360,
                "name": "VariableDeclaration",
                "src": "160:11:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "country",
<<<<<<< HEAD
                  "scope": 2113,
=======
                  "scope": 2363,
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
<<<<<<< HEAD
                    "id": 2111,
                    "name": "ElementaryTypeName",
                    "src": "282:6:9"
                  }
                ],
                "id": 2112,
                "name": "VariableDeclaration",
                "src": "282:14:9"
              }
            ],
            "id": 2113,
            "name": "StructDefinition",
            "src": "221:83:9"
=======
                    "id": 2361,
                    "name": "ElementaryTypeName",
                    "src": "182:6:9"
                  }
                ],
                "id": 2362,
                "name": "VariableDeclaration",
                "src": "182:14:9"
              }
            ],
            "id": 2363,
            "name": "StructDefinition",
            "src": "121:83:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "canonicalName": "UserDataStorage.CompanyInformation",
              "name": "CompanyInformation",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
<<<<<<< HEAD
                  "scope": 2122,
=======
                  "scope": 2376,
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
<<<<<<< HEAD
                    "id": 2114,
                    "name": "ElementaryTypeName",
                    "src": "349:6:9"
                  }
                ],
                "id": 2115,
                "name": "VariableDeclaration",
                "src": "349:11:9"
=======
                    "id": 2364,
                    "name": "ElementaryTypeName",
                    "src": "249:6:9"
                  }
                ],
                "id": 2365,
                "name": "VariableDeclaration",
                "src": "249:11:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "approvedBy",
<<<<<<< HEAD
                  "scope": 2122,
=======
                  "scope": 2376,
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
<<<<<<< HEAD
                    "id": 2116,
                    "name": "ElementaryTypeName",
                    "src": "371:7:9"
                  }
                ],
                "id": 2117,
                "name": "VariableDeclaration",
                "src": "371:18:9"
=======
                    "id": 2366,
                    "name": "ElementaryTypeName",
                    "src": "271:7:9"
                  }
                ],
                "id": 2367,
                "name": "VariableDeclaration",
                "src": "271:18:9"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "emissions",
                  "scope": 2376,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "mapping(uint256 => uint256)",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(uint256 => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2368,
                        "name": "ElementaryTypeName",
                        "src": "343:7:9"
                      },
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2369,
                        "name": "ElementaryTypeName",
                        "src": "354:7:9"
                      }
                    ],
                    "id": 2370,
                    "name": "Mapping",
                    "src": "335:27:9"
                  }
                ],
                "id": 2371,
                "name": "VariableDeclaration",
                "src": "335:37:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "constant": false,
<<<<<<< HEAD
                  "name": "emissions",
                  "scope": 2122,
=======
                  "name": "limits",
                  "scope": 2376,
>>>>>>> origin/CarbonToken
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "mapping(uint256 => uint256)",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "type": "mapping(uint256 => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2118,
                        "name": "ElementaryTypeName",
                        "src": "408:7:9"
=======
                        "id": 2372,
                        "name": "ElementaryTypeName",
                        "src": "422:7:9"
>>>>>>> origin/CarbonToken
                      },
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2119,
                        "name": "ElementaryTypeName",
                        "src": "419:7:9"
                      }
                    ],
                    "id": 2120,
                    "name": "Mapping",
                    "src": "400:27:9"
                  }
                ],
                "id": 2121,
                "name": "VariableDeclaration",
                "src": "400:37:9"
              }
            ],
            "id": 2122,
            "name": "StructDefinition",
            "src": "312:133:9"
=======
                        "id": 2373,
                        "name": "ElementaryTypeName",
                        "src": "433:7:9"
                      }
                    ],
                    "id": 2374,
                    "name": "Mapping",
                    "src": "414:27:9"
                  }
                ],
                "id": 2375,
                "name": "VariableDeclaration",
                "src": "414:34:9"
              }
            ],
            "id": 2376,
            "name": "StructDefinition",
            "src": "212:244:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "constant": false,
              "name": "owner",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 2123,
                "name": "ElementaryTypeName",
                "src": "453:7:9"
              }
            ],
            "id": 2124,
            "name": "VariableDeclaration",
            "src": "453:13:9"
=======
                "id": 2377,
                "name": "ElementaryTypeName",
                "src": "464:7:9"
              }
            ],
            "id": 2378,
            "name": "VariableDeclaration",
            "src": "464:13:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "constant": false,
              "name": "regulatorContract",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 2125,
                "name": "ElementaryTypeName",
                "src": "473:7:9"
              }
            ],
            "id": 2126,
            "name": "VariableDeclaration",
            "src": "473:25:9"
=======
                "id": 2379,
                "name": "ElementaryTypeName",
                "src": "484:7:9"
              }
            ],
            "id": 2380,
            "name": "VariableDeclaration",
            "src": "484:25:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "constant": false,
              "name": "companyContract",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
<<<<<<< HEAD
                "id": 2127,
                "name": "ElementaryTypeName",
                "src": "505:7:9"
              }
            ],
            "id": 2128,
            "name": "VariableDeclaration",
            "src": "505:23:9"
=======
                "id": 2381,
                "name": "ElementaryTypeName",
                "src": "516:7:9"
              }
            ],
            "id": 2382,
            "name": "VariableDeclaration",
            "src": "516:23:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "constant": false,
              "name": "regulators",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct UserDataStorage.RegulatorInformation)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
<<<<<<< HEAD
                    "id": 2129,
                    "name": "ElementaryTypeName",
                    "src": "545:7:9"
=======
                    "id": 2383,
                    "name": "ElementaryTypeName",
                    "src": "556:7:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "RegulatorInformation",
<<<<<<< HEAD
                      "referencedDeclaration": 2113,
                      "type": "struct UserDataStorage.RegulatorInformation"
                    },
                    "id": 2130,
                    "name": "UserDefinedTypeName",
                    "src": "556:20:9"
                  }
                ],
                "id": 2131,
                "name": "Mapping",
                "src": "537:40:9"
              }
            ],
            "id": 2132,
            "name": "VariableDeclaration",
            "src": "537:51:9"
=======
                      "referencedDeclaration": 2363,
                      "type": "struct UserDataStorage.RegulatorInformation"
                    },
                    "id": 2384,
                    "name": "UserDefinedTypeName",
                    "src": "567:20:9"
                  }
                ],
                "id": 2385,
                "name": "Mapping",
                "src": "548:40:9"
              }
            ],
            "id": 2386,
            "name": "VariableDeclaration",
            "src": "548:51:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "constant": false,
              "name": "companies",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct UserDataStorage.CompanyInformation)",
              "value": null,
<<<<<<< HEAD
              "visibility": "internal"
=======
              "visibility": "public"
>>>>>>> origin/CarbonToken
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct UserDataStorage.CompanyInformation)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
<<<<<<< HEAD
                    "id": 2133,
                    "name": "ElementaryTypeName",
                    "src": "603:7:9"
=======
                    "id": 2387,
                    "name": "ElementaryTypeName",
                    "src": "614:7:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "CompanyInformation",
<<<<<<< HEAD
                      "referencedDeclaration": 2122,
                      "type": "struct UserDataStorage.CompanyInformation"
                    },
                    "id": 2134,
                    "name": "UserDefinedTypeName",
                    "src": "614:18:9"
                  }
                ],
                "id": 2135,
                "name": "Mapping",
                "src": "595:38:9"
              }
            ],
            "id": 2136,
            "name": "VariableDeclaration",
            "src": "595:48:9"
=======
                      "referencedDeclaration": 2376,
                      "type": "struct UserDataStorage.CompanyInformation"
                    },
                    "id": 2388,
                    "name": "UserDefinedTypeName",
                    "src": "625:18:9"
                  }
                ],
                "id": 2389,
                "name": "Mapping",
                "src": "606:38:9"
              }
            ],
            "id": 2390,
            "name": "VariableDeclaration",
            "src": "606:55:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
<<<<<<< HEAD
              "scope": 2396,
=======
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2137,
                "name": "ParameterList",
                "src": "663:2:9"
=======
                "id": 2391,
                "name": "ParameterList",
                "src": "681:2:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2138,
                "name": "ParameterList",
                "src": "673:0:9"
=======
                "id": 2392,
                "name": "ParameterList",
                "src": "691:0:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 2124,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 2139,
                            "name": "Identifier",
                            "src": "684:5:9"
=======
                              "referencedDeclaration": 2378,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 2393,
                            "name": "Identifier",
                            "src": "702:5:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2795,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2140,
                                "name": "Identifier",
                                "src": "692:3:9"
                              }
                            ],
                            "id": 2141,
                            "name": "MemberAccess",
                            "src": "692:10:9"
                          }
                        ],
                        "id": 2142,
                        "name": "Assignment",
                        "src": "684:18:9"
                      }
                    ],
                    "id": 2143,
                    "name": "ExpressionStatement",
                    "src": "684:18:9"
                  }
                ],
                "id": 2144,
                "name": "Block",
                "src": "673:37:9"
              }
            ],
            "id": 2145,
            "name": "FunctionDefinition",
            "src": "652:58:9"
=======
                                  "referencedDeclaration": 3125,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2394,
                                "name": "Identifier",
                                "src": "710:3:9"
                              }
                            ],
                            "id": 2395,
                            "name": "MemberAccess",
                            "src": "710:10:9"
                          }
                        ],
                        "id": 2396,
                        "name": "Assignment",
                        "src": "702:18:9"
                      }
                    ],
                    "id": 2397,
                    "name": "ExpressionStatement",
                    "src": "702:18:9"
                  }
                ],
                "id": 2398,
                "name": "Block",
                "src": "691:37:9"
              }
            ],
            "id": 2399,
            "name": "FunctionDefinition",
            "src": "670:58:9"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "ownerOnly",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2400,
                "name": "ParameterList",
                "src": "772:2:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3128,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 2401,
                            "name": "Identifier",
                            "src": "786:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3125,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2402,
                                    "name": "Identifier",
                                    "src": "794:3:9"
                                  }
                                ],
                                "id": 2403,
                                "name": "MemberAccess",
                                "src": "794:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2378,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 2404,
                                "name": "Identifier",
                                "src": "808:5:9"
                              }
                            ],
                            "id": 2405,
                            "name": "BinaryOperation",
                            "src": "794:19:9"
                          }
                        ],
                        "id": 2406,
                        "name": "FunctionCall",
                        "src": "786:28:9"
                      }
                    ],
                    "id": 2407,
                    "name": "ExpressionStatement",
                    "src": "786:28:9"
                  },
                  {
                    "id": 2408,
                    "name": "PlaceholderStatement",
                    "src": "825:1:9"
                  }
                ],
                "id": 2409,
                "name": "Block",
                "src": "775:59:9"
              }
            ],
            "id": 2410,
            "name": "ModifierDefinition",
            "src": "754:80:9"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "approvedRegulatorContractOnly",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2411,
                "name": "ParameterList",
                "src": "884:2:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                                  "typeString": "literal_string \"Unauthorised address!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2412,
                            "name": "Identifier",
                            "src": "898:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3125,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2413,
                                    "name": "Identifier",
                                    "src": "906:3:9"
                                  }
                                ],
                                "id": 2414,
                                "name": "MemberAccess",
                                "src": "906:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2380,
                                  "type": "address",
                                  "value": "regulatorContract"
                                },
                                "id": 2415,
                                "name": "Identifier",
                                "src": "920:17:9"
                              }
                            ],
                            "id": 2416,
                            "name": "BinaryOperation",
                            "src": "906:31:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "556e617574686f7269736564206164647265737321",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Unauthorised address!\"",
                              "value": "Unauthorised address!"
                            },
                            "id": 2417,
                            "name": "Literal",
                            "src": "939:23:9"
                          }
                        ],
                        "id": 2418,
                        "name": "FunctionCall",
                        "src": "898:65:9"
                      }
                    ],
                    "id": 2419,
                    "name": "ExpressionStatement",
                    "src": "898:65:9"
                  },
                  {
                    "id": 2420,
                    "name": "PlaceholderStatement",
                    "src": "974:1:9"
                  }
                ],
                "id": 2421,
                "name": "Block",
                "src": "887:96:9"
              }
            ],
            "id": 2422,
            "name": "ModifierDefinition",
            "src": "846:137:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
<<<<<<< HEAD
              "name": "approvedRegulatorContractOnly",
=======
              "name": "approvedCompanyContractOnly",
>>>>>>> origin/CarbonToken
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2146,
                "name": "ParameterList",
                "src": "774:2:9"
=======
                "id": 2423,
                "name": "ParameterList",
                "src": "1027:2:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_stringliteral_ebc5fb610971d5c7667e74652906c7630d4ba5a7b6230e32fc223f95eb8ff386",
                                  "typeString": "literal_string \"Unauthorised address!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2147,
                            "name": "Identifier",
                            "src": "788:7:9"
=======
                                  "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                                  "typeString": "literal_string \"Unathorised address!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2424,
                            "name": "Identifier",
                            "src": "1041:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
<<<<<<< HEAD
                                      "referencedDeclaration": 2795,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2148,
                                    "name": "Identifier",
                                    "src": "796:3:9"
                                  }
                                ],
                                "id": 2149,
                                "name": "MemberAccess",
                                "src": "796:10:9"
=======
                                      "referencedDeclaration": 3125,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2425,
                                    "name": "Identifier",
                                    "src": "1049:3:9"
                                  }
                                ],
                                "id": 2426,
                                "name": "MemberAccess",
                                "src": "1049:10:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2126,
                                  "type": "address",
                                  "value": "regulatorContract"
                                },
                                "id": 2150,
                                "name": "Identifier",
                                "src": "810:17:9"
                              }
                            ],
                            "id": 2151,
                            "name": "BinaryOperation",
                            "src": "796:31:9"
=======
                                  "referencedDeclaration": 2382,
                                  "type": "address",
                                  "value": "companyContract"
                                },
                                "id": 2427,
                                "name": "Identifier",
                                "src": "1063:15:9"
                              }
                            ],
                            "id": 2428,
                            "name": "BinaryOperation",
                            "src": "1049:29:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "556e6174686f7269736564206164647265737321",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Unathorised address!\"",
                              "value": "Unathorised address!"
                            },
                            "id": 2429,
                            "name": "Literal",
                            "src": "1080:22:9"
                          }
                        ],
                        "id": 2430,
                        "name": "FunctionCall",
                        "src": "1041:62:9"
                      }
                    ],
                    "id": 2431,
                    "name": "ExpressionStatement",
                    "src": "1041:62:9"
                  },
                  {
                    "id": 2432,
                    "name": "PlaceholderStatement",
                    "src": "1114:1:9"
                  }
                ],
                "id": 2433,
                "name": "Block",
                "src": "1030:93:9"
              }
            ],
            "id": 2434,
            "name": "ModifierDefinition",
            "src": "991:132:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setCompanyContract",
              "scope": 2717,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 2446,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2435,
                        "name": "ElementaryTypeName",
                        "src": "1177:7:9"
                      }
                    ],
                    "id": 2436,
                    "name": "VariableDeclaration",
                    "src": "1177:16:9"
                  }
                ],
                "id": 2437,
                "name": "ParameterList",
                "src": "1176:18:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2440,
                "name": "ParameterList",
                "src": "1212:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2410,
                      "type": "modifier ()",
                      "value": "ownerOnly"
                    },
                    "id": 2438,
                    "name": "Identifier",
                    "src": "1202:9:9"
                  }
                ],
                "id": 2439,
                "name": "ModifierInvocation",
                "src": "1202:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2382,
                              "type": "address",
                              "value": "companyContract"
                            },
                            "id": 2441,
                            "name": "Identifier",
                            "src": "1223:15:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2436,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 2442,
                            "name": "Identifier",
                            "src": "1241:8:9"
                          }
                        ],
                        "id": 2443,
                        "name": "Assignment",
                        "src": "1223:26:9"
                      }
                    ],
                    "id": 2444,
                    "name": "ExpressionStatement",
                    "src": "1223:26:9"
                  }
                ],
                "id": 2445,
                "name": "Block",
                "src": "1212:45:9"
              }
            ],
            "id": 2446,
            "name": "FunctionDefinition",
            "src": "1149:108:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setRegulatorContract",
              "scope": 2717,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 2458,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2447,
                        "name": "ElementaryTypeName",
                        "src": "1295:7:9"
                      }
                    ],
                    "id": 2448,
                    "name": "VariableDeclaration",
                    "src": "1295:16:9"
                  }
                ],
                "id": 2449,
                "name": "ParameterList",
                "src": "1294:18:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2452,
                "name": "ParameterList",
                "src": "1330:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2410,
                      "type": "modifier ()",
                      "value": "ownerOnly"
                    },
                    "id": 2450,
                    "name": "Identifier",
                    "src": "1320:9:9"
                  }
                ],
                "id": 2451,
                "name": "ModifierInvocation",
                "src": "1320:9:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2380,
                              "type": "address",
                              "value": "regulatorContract"
                            },
                            "id": 2453,
                            "name": "Identifier",
                            "src": "1341:17:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "556e617574686f7269736564206164647265737321",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Unauthorised address!\"",
                              "value": "Unauthorised address!"
                            },
                            "id": 2152,
                            "name": "Literal",
                            "src": "829:23:9"
                          }
                        ],
                        "id": 2153,
                        "name": "FunctionCall",
                        "src": "788:65:9"
                      }
                    ],
                    "id": 2154,
                    "name": "ExpressionStatement",
                    "src": "788:65:9"
                  },
                  {
                    "id": 2155,
                    "name": "PlaceholderStatement",
                    "src": "864:1:9"
                  }
                ],
                "id": 2156,
                "name": "Block",
                "src": "777:96:9"
              }
            ],
            "id": 2157,
            "name": "ModifierDefinition",
            "src": "736:137:9"
=======
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2448,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 2454,
                            "name": "Identifier",
                            "src": "1361:8:9"
                          }
                        ],
                        "id": 2455,
                        "name": "Assignment",
                        "src": "1341:28:9"
                      }
                    ],
                    "id": 2456,
                    "name": "ExpressionStatement",
                    "src": "1341:28:9"
                  }
                ],
                "id": 2457,
                "name": "Block",
                "src": "1330:47:9"
              }
            ],
            "id": 2458,
            "name": "FunctionDefinition",
            "src": "1265:112:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
<<<<<<< HEAD
              "name": "approvedCompanyContractOnly",
              "visibility": "internal"
            },
            "children": [
              {
=======
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addRegulator",
              "scope": 2717,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 2492,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2459,
                        "name": "ElementaryTypeName",
                        "src": "1506:6:9"
                      }
                    ],
                    "id": 2460,
                    "name": "VariableDeclaration",
                    "src": "1506:18:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "country",
                      "scope": 2492,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2461,
                        "name": "ElementaryTypeName",
                        "src": "1526:6:9"
                      }
                    ],
                    "id": 2462,
                    "name": "VariableDeclaration",
                    "src": "1526:21:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 2492,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2463,
                        "name": "ElementaryTypeName",
                        "src": "1549:7:9"
                      }
                    ],
                    "id": 2464,
                    "name": "VariableDeclaration",
                    "src": "1549:16:9"
                  }
                ],
                "id": 2465,
                "name": "ParameterList",
                "src": "1505:61:9"
              },
              {
>>>>>>> origin/CarbonToken
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2158,
                "name": "ParameterList",
                "src": "917:2:9"
=======
                "id": 2468,
                "name": "ParameterList",
                "src": "1604:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2422,
                      "type": "modifier ()",
                      "value": "approvedRegulatorContractOnly"
                    },
                    "id": 2466,
                    "name": "Identifier",
                    "src": "1574:29:9"
                  }
                ],
                "id": 2467,
                "name": "ModifierInvocation",
                "src": "1574:29:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_stringliteral_60193ce2b579a6177758588564e002772ecb3c470b1f64b2963407bd8f86be63",
                                  "typeString": "literal_string \"Unathorised address!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2159,
                            "name": "Identifier",
                            "src": "931:7:9"
=======
                                  "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                                  "typeString": "literal_string \"Regulator is already authorised!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2469,
                            "name": "Identifier",
                            "src": "1678:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
<<<<<<< HEAD
                                "typeIdentifier": "t_address",
                                "typeString": "address"
=======
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
>>>>>>> origin/CarbonToken
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
<<<<<<< HEAD
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
=======
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
>>>>>>> origin/CarbonToken
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2795,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2160,
                                    "name": "Identifier",
                                    "src": "939:3:9"
                                  }
                                ],
                                "id": 2161,
                                "name": "MemberAccess",
                                "src": "939:10:9"
=======
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 2470,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1686:5:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
                                          "referencedDeclaration": 2360,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2386,
                                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                                  "value": "regulators"
                                                },
                                                "id": 2471,
                                                "name": "Identifier",
                                                "src": "1692:10:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2464,
                                                  "type": "address",
                                                  "value": "_address"
                                                },
                                                "id": 2472,
                                                "name": "Identifier",
                                                "src": "1703:8:9"
                                              }
                                            ],
                                            "id": 2473,
                                            "name": "IndexAccess",
                                            "src": "1692:20:9"
                                          }
                                        ],
                                        "id": 2474,
                                        "name": "MemberAccess",
                                        "src": "1692:25:9"
                                      }
                                    ],
                                    "id": 2475,
                                    "name": "FunctionCall",
                                    "src": "1686:32:9"
                                  }
                                ],
                                "id": 2476,
                                "name": "MemberAccess",
                                "src": "1686:39:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2128,
                                  "type": "address",
                                  "value": "companyContract"
                                },
                                "id": 2162,
                                "name": "Identifier",
                                "src": "953:15:9"
                              }
                            ],
                            "id": 2163,
                            "name": "BinaryOperation",
                            "src": "939:29:9"
=======
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2477,
                                "name": "Literal",
                                "src": "1729:1:9"
                              }
                            ],
                            "id": 2478,
                            "name": "BinaryOperation",
                            "src": "1686:44:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "556e6174686f7269736564206164647265737321",
=======
                              "hexvalue": "526567756c61746f7220697320616c726561647920617574686f726973656421",
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
<<<<<<< HEAD
                              "type": "literal_string \"Unathorised address!\"",
                              "value": "Unathorised address!"
                            },
                            "id": 2164,
                            "name": "Literal",
                            "src": "970:22:9"
                          }
                        ],
                        "id": 2165,
                        "name": "FunctionCall",
                        "src": "931:62:9"
                      }
                    ],
                    "id": 2166,
                    "name": "ExpressionStatement",
                    "src": "931:62:9"
                  },
                  {
                    "id": 2167,
                    "name": "PlaceholderStatement",
                    "src": "1004:1:9"
                  }
                ],
                "id": 2168,
                "name": "Block",
                "src": "920:93:9"
              }
            ],
            "id": 2169,
            "name": "ModifierDefinition",
            "src": "881:132:9"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "ownerOnly",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2170,
                "name": "ParameterList",
                "src": "1039:2:9"
              },
              {
                "children": [
                  {
=======
                              "type": "literal_string \"Regulator is already authorised!\"",
                              "value": "Regulator is already authorised!"
                            },
                            "id": 2479,
                            "name": "Literal",
                            "src": "1732:34:9"
                          }
                        ],
                        "id": 2480,
                        "name": "FunctionCall",
                        "src": "1678:89:9"
                      }
                    ],
                    "id": 2481,
                    "name": "ExpressionStatement",
                    "src": "1678:89:9"
                  },
                  {
>>>>>>> origin/CarbonToken
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
<<<<<<< HEAD
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
=======
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct UserDataStorage.RegulatorInformation storage ref"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5a9ea3c4ab39badf5b6913b8759d81cccf6c4ab11997c9dcd6683c276566b80f",
                                  "typeString": "literal_string \"Only the owner can do this\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2171,
                            "name": "Identifier",
                            "src": "1053:7:9"
=======
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2386,
                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                  "value": "regulators"
                                },
                                "id": 2482,
                                "name": "Identifier",
                                "src": "1778:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2464,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 2483,
                                "name": "Identifier",
                                "src": "1789:8:9"
                              }
                            ],
                            "id": 2484,
                            "name": "IndexAccess",
                            "src": "1778:20:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
=======
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "country"
                              ],
                              "type": "struct UserDataStorage.RegulatorInformation memory",
                              "type_conversion": false
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2795,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 2172,
                                    "name": "Identifier",
                                    "src": "1061:3:9"
                                  }
                                ],
                                "id": 2173,
                                "name": "MemberAccess",
                                "src": "1061:10:9"
=======
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2363,
                                  "type": "type(struct UserDataStorage.RegulatorInformation storage pointer)",
                                  "value": "RegulatorInformation"
                                },
                                "id": 2485,
                                "name": "Identifier",
                                "src": "1801:20:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2460,
                                  "type": "string memory",
                                  "value": "name"
                                },
                                "id": 2486,
                                "name": "Identifier",
                                "src": "1829:4:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2124,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 2174,
                                "name": "Identifier",
                                "src": "1075:5:9"
                              }
                            ],
                            "id": 2175,
                            "name": "BinaryOperation",
                            "src": "1061:19:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "4f6e6c7920746865206f776e65722063616e20646f2074686973",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Only the owner can do this\"",
                              "value": "Only the owner can do this"
                            },
                            "id": 2176,
                            "name": "Literal",
                            "src": "1082:28:9"
                          }
                        ],
                        "id": 2177,
                        "name": "FunctionCall",
                        "src": "1053:58:9"
                      }
                    ],
                    "id": 2178,
                    "name": "ExpressionStatement",
                    "src": "1053:58:9"
                  },
                  {
                    "id": 2179,
                    "name": "PlaceholderStatement",
                    "src": "1122:1:9"
                  }
                ],
                "id": 2180,
                "name": "Block",
                "src": "1042:89:9"
              }
            ],
            "id": 2181,
            "name": "ModifierDefinition",
            "src": "1021:110:9"
=======
                                  "referencedDeclaration": 2462,
                                  "type": "string memory",
                                  "value": "country"
                                },
                                "id": 2487,
                                "name": "Identifier",
                                "src": "1844:7:9"
                              }
                            ],
                            "id": 2488,
                            "name": "FunctionCall",
                            "src": "1801:52:9"
                          }
                        ],
                        "id": 2489,
                        "name": "Assignment",
                        "src": "1778:75:9"
                      }
                    ],
                    "id": 2490,
                    "name": "ExpressionStatement",
                    "src": "1778:75:9"
                  }
                ],
                "id": 2491,
                "name": "Block",
                "src": "1604:257:9"
              }
            ],
            "id": 2492,
            "name": "FunctionDefinition",
            "src": "1484:377:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "setCompanyContract",
              "scope": 2396,
=======
              "name": "removeRegulator",
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
<<<<<<< HEAD
                      "scope": 2193,
=======
                      "scope": 2518,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2182,
                        "name": "ElementaryTypeName",
                        "src": "1226:7:9"
                      }
                    ],
                    "id": 2183,
                    "name": "VariableDeclaration",
                    "src": "1226:16:9"
                  }
                ],
                "id": 2184,
                "name": "ParameterList",
                "src": "1225:18:9"
=======
                        "id": 2493,
                        "name": "ElementaryTypeName",
                        "src": "1955:7:9"
                      }
                    ],
                    "id": 2494,
                    "name": "VariableDeclaration",
                    "src": "1955:16:9"
                  }
                ],
                "id": 2495,
                "name": "ParameterList",
                "src": "1954:18:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2187,
                "name": "ParameterList",
                "src": "1263:0:9"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
=======
                "id": 2498,
                "name": "ParameterList",
                "src": "2010:0:9"
              },
              {
                "attributes": {
                  "arguments": null
>>>>>>> origin/CarbonToken
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
<<<<<<< HEAD
                      "referencedDeclaration": 2181,
                      "type": "modifier ()",
                      "value": "ownerOnly"
                    },
                    "id": 2185,
                    "name": "Identifier",
                    "src": "1244:9:9"
                  }
                ],
                "id": 2186,
                "name": "ModifierInvocation",
                "src": "1244:11:9"
=======
                      "referencedDeclaration": 2422,
                      "type": "modifier ()",
                      "value": "approvedRegulatorContractOnly"
                    },
                    "id": 2496,
                    "name": "Identifier",
                    "src": "1980:29:9"
                  }
                ],
                "id": 2497,
                "name": "ModifierInvocation",
                "src": "1980:29:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
<<<<<<< HEAD
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
=======
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
<<<<<<< HEAD
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2128,
                              "type": "address",
                              "value": "companyContract"
                            },
                            "id": 2188,
                            "name": "Identifier",
                            "src": "1274:15:9"
=======
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                                  "typeString": "literal_string \"Address is not an authorised regulator!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2499,
                            "name": "Identifier",
                            "src": "2070:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2183,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 2189,
                            "name": "Identifier",
                            "src": "1292:8:9"
                          }
                        ],
                        "id": 2190,
                        "name": "Assignment",
                        "src": "1274:26:9"
                      }
                    ],
                    "id": 2191,
                    "name": "ExpressionStatement",
                    "src": "1274:26:9"
                  }
                ],
                "id": 2192,
                "name": "Block",
                "src": "1263:45:9"
              }
            ],
            "id": 2193,
            "name": "FunctionDefinition",
            "src": "1198:110:9"
=======
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 2500,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2078:5:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
                                          "referencedDeclaration": 2360,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2386,
                                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                                  "value": "regulators"
                                                },
                                                "id": 2501,
                                                "name": "Identifier",
                                                "src": "2084:10:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2494,
                                                  "type": "address",
                                                  "value": "_address"
                                                },
                                                "id": 2502,
                                                "name": "Identifier",
                                                "src": "2095:8:9"
                                              }
                                            ],
                                            "id": 2503,
                                            "name": "IndexAccess",
                                            "src": "2084:20:9"
                                          }
                                        ],
                                        "id": 2504,
                                        "name": "MemberAccess",
                                        "src": "2084:25:9"
                                      }
                                    ],
                                    "id": 2505,
                                    "name": "FunctionCall",
                                    "src": "2078:32:9"
                                  }
                                ],
                                "id": 2506,
                                "name": "MemberAccess",
                                "src": "2078:39:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2507,
                                "name": "Literal",
                                "src": "2121:1:9"
                              }
                            ],
                            "id": 2508,
                            "name": "BinaryOperation",
                            "src": "2078:44:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "41646472657373206973206e6f7420616e20617574686f726973656420726567756c61746f7221",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address is not an authorised regulator!\"",
                              "value": "Address is not an authorised regulator!"
                            },
                            "id": 2509,
                            "name": "Literal",
                            "src": "2124:41:9"
                          }
                        ],
                        "id": 2510,
                        "name": "FunctionCall",
                        "src": "2070:96:9"
                      }
                    ],
                    "id": 2511,
                    "name": "ExpressionStatement",
                    "src": "2070:96:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2386,
                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                  "value": "regulators"
                                },
                                "id": 2512,
                                "name": "Identifier",
                                "src": "2186:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2494,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 2513,
                                "name": "Identifier",
                                "src": "2197:8:9"
                              }
                            ],
                            "id": 2514,
                            "name": "IndexAccess",
                            "src": "2186:20:9"
                          }
                        ],
                        "id": 2515,
                        "name": "UnaryOperation",
                        "src": "2179:27:9"
                      }
                    ],
                    "id": 2516,
                    "name": "ExpressionStatement",
                    "src": "2179:27:9"
                  }
                ],
                "id": 2517,
                "name": "Block",
                "src": "2010:204:9"
              }
            ],
            "id": 2518,
            "name": "FunctionDefinition",
            "src": "1930:284:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "setRegulatorContract",
              "scope": 2396,
              "stateMutability": "nonpayable",
=======
              "modifiers": [
                null
              ],
              "name": "isApprovedRegulator",
              "scope": 2717,
              "stateMutability": "view",
>>>>>>> origin/CarbonToken
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
<<<<<<< HEAD
                      "scope": 2205,
=======
                      "scope": 2536,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2194,
                        "name": "ElementaryTypeName",
                        "src": "1346:7:9"
                      }
                    ],
                    "id": 2195,
                    "name": "VariableDeclaration",
                    "src": "1346:16:9"
                  }
                ],
                "id": 2196,
                "name": "ParameterList",
                "src": "1345:18:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2199,
                "name": "ParameterList",
                "src": "1383:0:9"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2181,
                      "type": "modifier ()",
                      "value": "ownerOnly"
                    },
                    "id": 2197,
                    "name": "Identifier",
                    "src": "1364:9:9"
                  }
                ],
                "id": 2198,
                "name": "ModifierInvocation",
                "src": "1364:11:9"
=======
                        "id": 2519,
                        "name": "ElementaryTypeName",
                        "src": "2316:7:9"
                      }
                    ],
                    "id": 2520,
                    "name": "VariableDeclaration",
                    "src": "2316:16:9"
                  }
                ],
                "id": 2521,
                "name": "ParameterList",
                "src": "2315:18:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2536,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2522,
                        "name": "ElementaryTypeName",
                        "src": "2354:4:9"
                      }
                    ],
                    "id": 2523,
                    "name": "VariableDeclaration",
                    "src": "2354:4:9"
                  }
                ],
                "id": 2524,
                "name": "ParameterList",
                "src": "2353:6:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
<<<<<<< HEAD
=======
                    "attributes": {
                      "functionReturnParameters": 2524
                    },
>>>>>>> origin/CarbonToken
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
<<<<<<< HEAD
=======
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
>>>>>>> origin/CarbonToken
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "operator": "=",
                          "type": "address"
=======
                          "operator": "!=",
                          "type": "bool"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2126,
                              "type": "address",
                              "value": "regulatorContract"
                            },
                            "id": 2200,
                            "name": "Identifier",
                            "src": "1394:17:9"
=======
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 2525,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2378:5:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "name",
                                      "referencedDeclaration": 2360,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct UserDataStorage.RegulatorInformation storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2386,
                                              "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                              "value": "regulators"
                                            },
                                            "id": 2526,
                                            "name": "Identifier",
                                            "src": "2384:10:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2520,
                                              "type": "address",
                                              "value": "_address"
                                            },
                                            "id": 2527,
                                            "name": "Identifier",
                                            "src": "2395:8:9"
                                          }
                                        ],
                                        "id": 2528,
                                        "name": "IndexAccess",
                                        "src": "2384:20:9"
                                      }
                                    ],
                                    "id": 2529,
                                    "name": "MemberAccess",
                                    "src": "2384:25:9"
                                  }
                                ],
                                "id": 2530,
                                "name": "FunctionCall",
                                "src": "2378:32:9"
                              }
                            ],
                            "id": 2531,
                            "name": "MemberAccess",
                            "src": "2378:39:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2195,
                              "type": "address",
                              "value": "_address"
                            },
                            "id": 2201,
                            "name": "Identifier",
                            "src": "1414:8:9"
                          }
                        ],
                        "id": 2202,
                        "name": "Assignment",
                        "src": "1394:28:9"
                      }
                    ],
                    "id": 2203,
                    "name": "ExpressionStatement",
                    "src": "1394:28:9"
                  }
                ],
                "id": 2204,
                "name": "Block",
                "src": "1383:47:9"
              }
            ],
            "id": 2205,
            "name": "FunctionDefinition",
            "src": "1316:114:9"
=======
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2532,
                            "name": "Literal",
                            "src": "2421:1:9"
                          }
                        ],
                        "id": 2533,
                        "name": "BinaryOperation",
                        "src": "2378:44:9"
                      }
                    ],
                    "id": 2534,
                    "name": "Return",
                    "src": "2371:51:9"
                  }
                ],
                "id": 2535,
                "name": "Block",
                "src": "2360:70:9"
              }
            ],
            "id": 2536,
            "name": "FunctionDefinition",
            "src": "2287:143:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "addRegulator",
              "scope": 2396,
=======
              "name": "addCompany",
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
<<<<<<< HEAD
                      "scope": 2239,
=======
                      "scope": 2570,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
<<<<<<< HEAD
                        "id": 2206,
                        "name": "ElementaryTypeName",
                        "src": "1545:6:9"
                      }
                    ],
                    "id": 2207,
                    "name": "VariableDeclaration",
                    "src": "1545:18:9"
=======
                        "id": 2537,
                        "name": "ElementaryTypeName",
                        "src": "2550:6:9"
                      }
                    ],
                    "id": 2538,
                    "name": "VariableDeclaration",
                    "src": "2550:18:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "attributes": {
                      "constant": false,
<<<<<<< HEAD
                      "name": "country",
                      "scope": 2239,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
=======
                      "name": "company",
                      "scope": 2570,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
>>>>>>> origin/CarbonToken
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "name": "string",
                          "type": "string"
                        },
                        "id": 2208,
                        "name": "ElementaryTypeName",
                        "src": "1565:6:9"
                      }
                    ],
                    "id": 2209,
                    "name": "VariableDeclaration",
                    "src": "1565:21:9"
=======
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2539,
                        "name": "ElementaryTypeName",
                        "src": "2570:7:9"
                      }
                    ],
                    "id": 2540,
                    "name": "VariableDeclaration",
                    "src": "2570:15:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "attributes": {
                      "constant": false,
<<<<<<< HEAD
                      "name": "_address",
                      "scope": 2239,
=======
                      "name": "approvedBy",
                      "scope": 2570,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2210,
                        "name": "ElementaryTypeName",
                        "src": "1588:7:9"
                      }
                    ],
                    "id": 2211,
                    "name": "VariableDeclaration",
                    "src": "1588:16:9"
                  }
                ],
                "id": 2212,
                "name": "ParameterList",
                "src": "1544:61:9"
=======
                        "id": 2541,
                        "name": "ElementaryTypeName",
                        "src": "2587:7:9"
                      }
                    ],
                    "id": 2542,
                    "name": "VariableDeclaration",
                    "src": "2587:18:9"
                  }
                ],
                "id": 2543,
                "name": "ParameterList",
                "src": "2549:57:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2215,
                "name": "ParameterList",
                "src": "1643:0:9"
=======
                "id": 2546,
                "name": "ParameterList",
                "src": "2642:0:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
<<<<<<< HEAD
                      "referencedDeclaration": 2157,
                      "type": "modifier ()",
                      "value": "approvedRegulatorContractOnly"
                    },
                    "id": 2213,
                    "name": "Identifier",
                    "src": "1613:29:9"
                  }
                ],
                "id": 2214,
                "name": "ModifierInvocation",
                "src": "1613:29:9"
=======
                      "referencedDeclaration": 2434,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2544,
                    "name": "Identifier",
                    "src": "2614:27:9"
                  }
                ],
                "id": 2545,
                "name": "ModifierInvocation",
                "src": "2614:27:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_stringliteral_28a6cf96fc28c2b135a00855faa066c91ce1aa8c5fe6a0a8c096a7424150e3d3",
                                  "typeString": "literal_string \"Regulator is already authorised!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2216,
                            "name": "Identifier",
                            "src": "1717:7:9"
=======
                                  "typeIdentifier": "t_stringliteral_8b1d0551048908da3e4ebdbb164a69e583266041f25e9d22df1810ea960aee1b",
                                  "typeString": "literal_string \"Address is already an approved Company!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2547,
                            "name": "Identifier",
                            "src": "2719:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
<<<<<<< HEAD
                                        "id": 2217,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "1725:5:9"
=======
                                        "id": 2548,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2727:5:9"
>>>>>>> origin/CarbonToken
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
<<<<<<< HEAD
                                          "referencedDeclaration": 2110,
=======
                                          "referencedDeclaration": 2365,
>>>>>>> origin/CarbonToken
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
<<<<<<< HEAD
                                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
=======
                                              "type": "struct UserDataStorage.CompanyInformation storage ref"
>>>>>>> origin/CarbonToken
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2132,
                                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                                  "value": "regulators"
                                                },
                                                "id": 2218,
                                                "name": "Identifier",
                                                "src": "1731:10:9"
=======
                                                  "referencedDeclaration": 2390,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2549,
                                                "name": "Identifier",
                                                "src": "2733:9:9"
>>>>>>> origin/CarbonToken
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2211,
                                                  "type": "address",
                                                  "value": "_address"
                                                },
                                                "id": 2219,
                                                "name": "Identifier",
                                                "src": "1742:8:9"
                                              }
                                            ],
                                            "id": 2220,
                                            "name": "IndexAccess",
                                            "src": "1731:20:9"
                                          }
                                        ],
                                        "id": 2221,
                                        "name": "MemberAccess",
                                        "src": "1731:25:9"
                                      }
                                    ],
                                    "id": 2222,
                                    "name": "FunctionCall",
                                    "src": "1725:32:9"
                                  }
                                ],
                                "id": 2223,
                                "name": "MemberAccess",
                                "src": "1725:39:9"
=======
                                                  "referencedDeclaration": 2540,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2550,
                                                "name": "Identifier",
                                                "src": "2743:7:9"
                                              }
                                            ],
                                            "id": 2551,
                                            "name": "IndexAccess",
                                            "src": "2733:18:9"
                                          }
                                        ],
                                        "id": 2552,
                                        "name": "MemberAccess",
                                        "src": "2733:23:9"
                                      }
                                    ],
                                    "id": 2553,
                                    "name": "FunctionCall",
                                    "src": "2727:30:9"
                                  }
                                ],
                                "id": 2554,
                                "name": "MemberAccess",
                                "src": "2727:37:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 2224,
                                "name": "Literal",
                                "src": "1768:1:9"
                              }
                            ],
                            "id": 2225,
                            "name": "BinaryOperation",
                            "src": "1725:44:9"
=======
                                "id": 2555,
                                "name": "Literal",
                                "src": "2768:1:9"
                              }
                            ],
                            "id": 2556,
                            "name": "BinaryOperation",
                            "src": "2727:42:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "526567756c61746f7220697320616c726561647920617574686f726973656421",
=======
                              "hexvalue": "4164647265737320697320616c726561647920616e20617070726f76656420436f6d70616e7921",
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
<<<<<<< HEAD
                              "type": "literal_string \"Regulator is already authorised!\"",
                              "value": "Regulator is already authorised!"
                            },
                            "id": 2226,
                            "name": "Literal",
                            "src": "1771:34:9"
                          }
                        ],
                        "id": 2227,
                        "name": "FunctionCall",
                        "src": "1717:89:9"
                      }
                    ],
                    "id": 2228,
                    "name": "ExpressionStatement",
                    "src": "1717:89:9"
=======
                              "type": "literal_string \"Address is already an approved Company!\"",
                              "value": "Address is already an approved Company!"
                            },
                            "id": 2557,
                            "name": "Literal",
                            "src": "2771:41:9"
                          }
                        ],
                        "id": 2558,
                        "name": "FunctionCall",
                        "src": "2719:94:9"
                      }
                    ],
                    "id": 2559,
                    "name": "ExpressionStatement",
                    "src": "2719:94:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
<<<<<<< HEAD
                          "type": "struct UserDataStorage.RegulatorInformation storage ref"
=======
                          "type": "struct UserDataStorage.CompanyInformation storage ref"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
<<<<<<< HEAD
                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
=======
                              "type": "struct UserDataStorage.CompanyInformation storage ref"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2132,
                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                  "value": "regulators"
                                },
                                "id": 2229,
                                "name": "Identifier",
                                "src": "1817:10:9"
=======
                                  "referencedDeclaration": 2390,
                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                  "value": "companies"
                                },
                                "id": 2560,
                                "name": "Identifier",
                                "src": "2824:9:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2211,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 2230,
                                "name": "Identifier",
                                "src": "1828:8:9"
                              }
                            ],
                            "id": 2231,
                            "name": "IndexAccess",
                            "src": "1817:20:9"
=======
                                  "referencedDeclaration": 2540,
                                  "type": "address",
                                  "value": "company"
                                },
                                "id": 2561,
                                "name": "Identifier",
                                "src": "2834:7:9"
                              }
                            ],
                            "id": 2562,
                            "name": "IndexAccess",
                            "src": "2824:18:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "name",
<<<<<<< HEAD
                                "country"
                              ],
                              "type": "struct UserDataStorage.RegulatorInformation memory",
=======
                                "approvedBy"
                              ],
                              "type": "struct UserDataStorage.CompanyInformation memory",
>>>>>>> origin/CarbonToken
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2113,
                                  "type": "type(struct UserDataStorage.RegulatorInformation storage pointer)",
                                  "value": "RegulatorInformation"
                                },
                                "id": 2232,
                                "name": "Identifier",
                                "src": "1840:20:9"
=======
                                  "referencedDeclaration": 2376,
                                  "type": "type(struct UserDataStorage.CompanyInformation storage pointer)",
                                  "value": "CompanyInformation"
                                },
                                "id": 2563,
                                "name": "Identifier",
                                "src": "2845:18:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2207,
                                  "type": "string memory",
                                  "value": "name"
                                },
                                "id": 2233,
                                "name": "Identifier",
                                "src": "1868:4:9"
=======
                                  "referencedDeclaration": 2538,
                                  "type": "string memory",
                                  "value": "name"
                                },
                                "id": 2564,
                                "name": "Identifier",
                                "src": "2871:4:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2209,
                                  "type": "string memory",
                                  "value": "country"
                                },
                                "id": 2234,
                                "name": "Identifier",
                                "src": "1883:7:9"
                              }
                            ],
                            "id": 2235,
                            "name": "FunctionCall",
                            "src": "1840:52:9"
                          }
                        ],
                        "id": 2236,
                        "name": "Assignment",
                        "src": "1817:75:9"
                      }
                    ],
                    "id": 2237,
                    "name": "ExpressionStatement",
                    "src": "1817:75:9"
                  }
                ],
                "id": 2238,
                "name": "Block",
                "src": "1643:257:9"
              }
            ],
            "id": 2239,
            "name": "FunctionDefinition",
            "src": "1523:377:9"
=======
                                  "referencedDeclaration": 2542,
                                  "type": "address",
                                  "value": "approvedBy"
                                },
                                "id": 2565,
                                "name": "Identifier",
                                "src": "2889:10:9"
                              }
                            ],
                            "id": 2566,
                            "name": "FunctionCall",
                            "src": "2845:56:9"
                          }
                        ],
                        "id": 2567,
                        "name": "Assignment",
                        "src": "2824:77:9"
                      }
                    ],
                    "id": 2568,
                    "name": "ExpressionStatement",
                    "src": "2824:77:9"
                  }
                ],
                "id": 2569,
                "name": "Block",
                "src": "2642:267:9"
              }
            ],
            "id": 2570,
            "name": "FunctionDefinition",
            "src": "2530:379:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "removeRegulator",
              "scope": 2396,
=======
              "name": "removeCompany",
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
<<<<<<< HEAD
                      "name": "_address",
                      "scope": 2265,
=======
                      "name": "company",
                      "scope": 2596,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2240,
                        "name": "ElementaryTypeName",
                        "src": "1994:7:9"
                      }
                    ],
                    "id": 2241,
                    "name": "VariableDeclaration",
                    "src": "1994:16:9"
                  }
                ],
                "id": 2242,
                "name": "ParameterList",
                "src": "1993:18:9"
=======
                        "id": 2571,
                        "name": "ElementaryTypeName",
                        "src": "2993:7:9"
                      }
                    ],
                    "id": 2572,
                    "name": "VariableDeclaration",
                    "src": "2993:15:9"
                  }
                ],
                "id": 2573,
                "name": "ParameterList",
                "src": "2992:17:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2245,
                "name": "ParameterList",
                "src": "2049:0:9"
=======
                "id": 2576,
                "name": "ParameterList",
                "src": "3045:0:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
<<<<<<< HEAD
                      "referencedDeclaration": 2157,
                      "type": "modifier ()",
                      "value": "approvedRegulatorContractOnly"
                    },
                    "id": 2243,
                    "name": "Identifier",
                    "src": "2019:29:9"
                  }
                ],
                "id": 2244,
                "name": "ModifierInvocation",
                "src": "2019:29:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_5d083e7cda4905e57929bd2436b5e9483b256156d041a3a38087168c0bc8c871",
                                  "typeString": "literal_string \"Address is not an authorised regulator!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2246,
                            "name": "Identifier",
                            "src": "2109:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 2247,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2117:5:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
                                          "referencedDeclaration": 2110,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2132,
                                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                                  "value": "regulators"
                                                },
                                                "id": 2248,
                                                "name": "Identifier",
                                                "src": "2123:10:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2241,
                                                  "type": "address",
                                                  "value": "_address"
                                                },
                                                "id": 2249,
                                                "name": "Identifier",
                                                "src": "2134:8:9"
                                              }
                                            ],
                                            "id": 2250,
                                            "name": "IndexAccess",
                                            "src": "2123:20:9"
                                          }
                                        ],
                                        "id": 2251,
                                        "name": "MemberAccess",
                                        "src": "2123:25:9"
                                      }
                                    ],
                                    "id": 2252,
                                    "name": "FunctionCall",
                                    "src": "2117:32:9"
                                  }
                                ],
                                "id": 2253,
                                "name": "MemberAccess",
                                "src": "2117:39:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2254,
                                "name": "Literal",
                                "src": "2160:1:9"
                              }
                            ],
                            "id": 2255,
                            "name": "BinaryOperation",
                            "src": "2117:44:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "41646472657373206973206e6f7420616e20617574686f726973656420726567756c61746f7221",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address is not an authorised regulator!\"",
                              "value": "Address is not an authorised regulator!"
                            },
                            "id": 2256,
                            "name": "Literal",
                            "src": "2163:41:9"
                          }
                        ],
                        "id": 2257,
                        "name": "FunctionCall",
                        "src": "2109:96:9"
                      }
                    ],
                    "id": 2258,
                    "name": "ExpressionStatement",
                    "src": "2109:96:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct UserDataStorage.RegulatorInformation storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2132,
                                  "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                  "value": "regulators"
                                },
                                "id": 2259,
                                "name": "Identifier",
                                "src": "2225:10:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2241,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 2260,
                                "name": "Identifier",
                                "src": "2236:8:9"
                              }
                            ],
                            "id": 2261,
                            "name": "IndexAccess",
                            "src": "2225:20:9"
                          }
                        ],
                        "id": 2262,
                        "name": "UnaryOperation",
                        "src": "2218:27:9"
                      }
                    ],
                    "id": 2263,
                    "name": "ExpressionStatement",
                    "src": "2218:27:9"
                  }
                ],
                "id": 2264,
                "name": "Block",
                "src": "2049:204:9"
              }
            ],
            "id": 2265,
            "name": "FunctionDefinition",
            "src": "1969:284:9"
=======
                      "referencedDeclaration": 2434,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2574,
                    "name": "Identifier",
                    "src": "3017:27:9"
                  }
                ],
                "id": 2575,
                "name": "ModifierInvocation",
                "src": "3017:27:9"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                                  "typeString": "literal_string \"Address is not an approved company!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2577,
                            "name": "Identifier",
                            "src": "3111:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 2578,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "3119:5:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
                                          "referencedDeclaration": 2365,
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2390,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2579,
                                                "name": "Identifier",
                                                "src": "3125:9:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2572,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2580,
                                                "name": "Identifier",
                                                "src": "3135:7:9"
                                              }
                                            ],
                                            "id": 2581,
                                            "name": "IndexAccess",
                                            "src": "3125:18:9"
                                          }
                                        ],
                                        "id": 2582,
                                        "name": "MemberAccess",
                                        "src": "3125:23:9"
                                      }
                                    ],
                                    "id": 2583,
                                    "name": "FunctionCall",
                                    "src": "3119:30:9"
                                  }
                                ],
                                "id": 2584,
                                "name": "MemberAccess",
                                "src": "3119:37:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2585,
                                "name": "Literal",
                                "src": "3160:1:9"
                              }
                            ],
                            "id": 2586,
                            "name": "BinaryOperation",
                            "src": "3119:42:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address is not an approved company!\"",
                              "value": "Address is not an approved company!"
                            },
                            "id": 2587,
                            "name": "Literal",
                            "src": "3163:37:9"
                          }
                        ],
                        "id": 2588,
                        "name": "FunctionCall",
                        "src": "3111:90:9"
                      }
                    ],
                    "id": 2589,
                    "name": "ExpressionStatement",
                    "src": "3111:90:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2390,
                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                  "value": "companies"
                                },
                                "id": 2590,
                                "name": "Identifier",
                                "src": "3221:9:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2572,
                                  "type": "address",
                                  "value": "company"
                                },
                                "id": 2591,
                                "name": "Identifier",
                                "src": "3231:7:9"
                              }
                            ],
                            "id": 2592,
                            "name": "IndexAccess",
                            "src": "3221:18:9"
                          }
                        ],
                        "id": 2593,
                        "name": "UnaryOperation",
                        "src": "3214:25:9"
                      }
                    ],
                    "id": 2594,
                    "name": "ExpressionStatement",
                    "src": "3214:25:9"
                  }
                ],
                "id": 2595,
                "name": "Block",
                "src": "3045:202:9"
              }
            ],
            "id": 2596,
            "name": "FunctionDefinition",
            "src": "2970:277:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "modifiers": [
                null
              ],
              "name": "isAuthorisedRegulator",
              "scope": 2396,
              "stateMutability": "view",
=======
              "name": "updateCompanyEmissions",
              "scope": 2717,
              "stateMutability": "nonpayable",
>>>>>>> origin/CarbonToken
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
<<<<<<< HEAD
                      "name": "_address",
                      "scope": 2283,
=======
                      "name": "company",
                      "scope": 2630,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2266,
                        "name": "ElementaryTypeName",
                        "src": "2391:7:9"
                      }
                    ],
                    "id": 2267,
                    "name": "VariableDeclaration",
                    "src": "2391:16:9"
                  }
                ],
                "id": 2268,
                "name": "ParameterList",
                "src": "2390:18:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2283,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
=======
                        "id": 2597,
                        "name": "ElementaryTypeName",
                        "src": "3343:7:9"
                      }
                    ],
                    "id": 2598,
                    "name": "VariableDeclaration",
                    "src": "3343:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "year",
                      "scope": 2630,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
>>>>>>> origin/CarbonToken
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
<<<<<<< HEAD
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 2269,
                        "name": "ElementaryTypeName",
                        "src": "2429:4:9"
                      }
                    ],
                    "id": 2270,
                    "name": "VariableDeclaration",
                    "src": "2429:4:9"
                  }
                ],
                "id": 2271,
                "name": "ParameterList",
                "src": "2428:6:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2271
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 2272,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2453:5:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "name",
                                      "referencedDeclaration": 2110,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct UserDataStorage.RegulatorInformation storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2132,
                                              "type": "mapping(address => struct UserDataStorage.RegulatorInformation storage ref)",
                                              "value": "regulators"
                                            },
                                            "id": 2273,
                                            "name": "Identifier",
                                            "src": "2459:10:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2267,
                                              "type": "address",
                                              "value": "_address"
                                            },
                                            "id": 2274,
                                            "name": "Identifier",
                                            "src": "2470:8:9"
                                          }
                                        ],
                                        "id": 2275,
                                        "name": "IndexAccess",
                                        "src": "2459:20:9"
                                      }
                                    ],
                                    "id": 2276,
                                    "name": "MemberAccess",
                                    "src": "2459:25:9"
                                  }
                                ],
                                "id": 2277,
                                "name": "FunctionCall",
                                "src": "2453:32:9"
                              }
                            ],
                            "id": 2278,
                            "name": "MemberAccess",
                            "src": "2453:39:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2279,
                            "name": "Literal",
                            "src": "2496:1:9"
                          }
                        ],
                        "id": 2280,
                        "name": "BinaryOperation",
                        "src": "2453:44:9"
                      }
                    ],
                    "id": 2281,
                    "name": "Return",
                    "src": "2446:51:9"
                  }
                ],
                "id": 2282,
                "name": "Block",
                "src": "2435:70:9"
              }
            ],
            "id": 2283,
            "name": "FunctionDefinition",
            "src": "2360:145:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addCompany",
              "scope": 2396,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 2317,
=======
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2599,
                        "name": "ElementaryTypeName",
                        "src": "3360:7:9"
                      }
                    ],
                    "id": 2600,
                    "name": "VariableDeclaration",
                    "src": "3360:12:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "emissions",
                      "scope": 2630,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2284,
                        "name": "ElementaryTypeName",
                        "src": "2609:6:9"
                      }
                    ],
                    "id": 2285,
                    "name": "VariableDeclaration",
                    "src": "2609:18:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "company",
                      "scope": 2317,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2286,
                        "name": "ElementaryTypeName",
                        "src": "2629:7:9"
                      }
                    ],
                    "id": 2287,
                    "name": "VariableDeclaration",
                    "src": "2629:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "approvedBy",
                      "scope": 2317,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2288,
                        "name": "ElementaryTypeName",
                        "src": "2646:7:9"
                      }
                    ],
                    "id": 2289,
                    "name": "VariableDeclaration",
                    "src": "2646:18:9"
                  }
                ],
                "id": 2290,
                "name": "ParameterList",
                "src": "2608:57:9"
=======
                        "id": 2601,
                        "name": "ElementaryTypeName",
                        "src": "3374:7:9"
                      }
                    ],
                    "id": 2602,
                    "name": "VariableDeclaration",
                    "src": "3374:17:9"
                  }
                ],
                "id": 2603,
                "name": "ParameterList",
                "src": "3342:50:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2293,
                "name": "ParameterList",
                "src": "2701:0:9"
=======
                "id": 2606,
                "name": "ParameterList",
                "src": "3428:0:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
<<<<<<< HEAD
                      "referencedDeclaration": 2169,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2291,
                    "name": "Identifier",
                    "src": "2673:27:9"
                  }
                ],
                "id": 2292,
                "name": "ModifierInvocation",
                "src": "2673:27:9"
=======
                      "referencedDeclaration": 2434,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2604,
                    "name": "Identifier",
                    "src": "3400:27:9"
                  }
                ],
                "id": 2605,
                "name": "ModifierInvocation",
                "src": "3400:27:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
<<<<<<< HEAD
                                  "typeIdentifier": "t_stringliteral_8b1d0551048908da3e4ebdbb164a69e583266041f25e9d22df1810ea960aee1b",
                                  "typeString": "literal_string \"Address is already an approved Company!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2294,
                            "name": "Identifier",
                            "src": "2778:7:9"
=======
                                  "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                                  "typeString": "literal_string \"Address is not an approved company!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2607,
                            "name": "Identifier",
                            "src": "3494:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
<<<<<<< HEAD
                              "operator": "==",
=======
                              "operator": "!=",
>>>>>>> origin/CarbonToken
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
<<<<<<< HEAD
                                        "id": 2295,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2786:5:9"
=======
                                        "id": 2608,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "3502:5:9"
>>>>>>> origin/CarbonToken
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
<<<<<<< HEAD
                                          "referencedDeclaration": 2115,
=======
                                          "referencedDeclaration": 2365,
>>>>>>> origin/CarbonToken
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2136,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2296,
                                                "name": "Identifier",
                                                "src": "2792:9:9"
=======
                                                  "referencedDeclaration": 2390,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2609,
                                                "name": "Identifier",
                                                "src": "3508:9:9"
>>>>>>> origin/CarbonToken
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2287,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2297,
                                                "name": "Identifier",
                                                "src": "2802:7:9"
                                              }
                                            ],
                                            "id": 2298,
                                            "name": "IndexAccess",
                                            "src": "2792:18:9"
                                          }
                                        ],
                                        "id": 2299,
                                        "name": "MemberAccess",
                                        "src": "2792:23:9"
                                      }
                                    ],
                                    "id": 2300,
                                    "name": "FunctionCall",
                                    "src": "2786:30:9"
                                  }
                                ],
                                "id": 2301,
                                "name": "MemberAccess",
                                "src": "2786:37:9"
=======
                                                  "referencedDeclaration": 2598,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2610,
                                                "name": "Identifier",
                                                "src": "3518:7:9"
                                              }
                                            ],
                                            "id": 2611,
                                            "name": "IndexAccess",
                                            "src": "3508:18:9"
                                          }
                                        ],
                                        "id": 2612,
                                        "name": "MemberAccess",
                                        "src": "3508:23:9"
                                      }
                                    ],
                                    "id": 2613,
                                    "name": "FunctionCall",
                                    "src": "3502:30:9"
                                  }
                                ],
                                "id": 2614,
                                "name": "MemberAccess",
                                "src": "3502:37:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 2302,
                                "name": "Literal",
                                "src": "2827:1:9"
                              }
                            ],
                            "id": 2303,
                            "name": "BinaryOperation",
                            "src": "2786:42:9"
=======
                                "id": 2615,
                                "name": "Literal",
                                "src": "3543:1:9"
                              }
                            ],
                            "id": 2616,
                            "name": "BinaryOperation",
                            "src": "3502:42:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "4164647265737320697320616c726561647920616e20617070726f76656420436f6d70616e7921",
=======
                              "hexvalue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
<<<<<<< HEAD
                              "type": "literal_string \"Address is already an approved Company!\"",
                              "value": "Address is already an approved Company!"
                            },
                            "id": 2304,
                            "name": "Literal",
                            "src": "2830:41:9"
                          }
                        ],
                        "id": 2305,
                        "name": "FunctionCall",
                        "src": "2778:94:9"
                      }
                    ],
                    "id": 2306,
                    "name": "ExpressionStatement",
                    "src": "2778:94:9"
=======
                              "type": "literal_string \"Address is not an approved company!\"",
                              "value": "Address is not an approved company!"
                            },
                            "id": 2617,
                            "name": "Literal",
                            "src": "3546:37:9"
                          }
                        ],
                        "id": 2618,
                        "name": "FunctionCall",
                        "src": "3494:90:9"
                      }
                    ],
                    "id": 2619,
                    "name": "ExpressionStatement",
                    "src": "3494:90:9"
>>>>>>> origin/CarbonToken
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
<<<<<<< HEAD
                          "type": "struct UserDataStorage.CompanyInformation storage ref"
=======
                          "type": "uint256"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
<<<<<<< HEAD
                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2136,
                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                  "value": "companies"
                                },
                                "id": 2307,
                                "name": "Identifier",
                                "src": "2883:9:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2287,
                                  "type": "address",
                                  "value": "company"
                                },
                                "id": 2308,
                                "name": "Identifier",
                                "src": "2893:7:9"
                              }
                            ],
                            "id": 2309,
                            "name": "IndexAccess",
                            "src": "2883:18:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "name",
                                "approvedBy"
                              ],
                              "type": "struct UserDataStorage.CompanyInformation memory",
                              "type_conversion": false
=======
                              "type": "uint256"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2122,
                                  "type": "type(struct UserDataStorage.CompanyInformation storage pointer)",
                                  "value": "CompanyInformation"
                                },
                                "id": 2310,
                                "name": "Identifier",
                                "src": "2904:18:9"
=======
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "emissions",
                                  "referencedDeclaration": 2371,
                                  "type": "mapping(uint256 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct UserDataStorage.CompanyInformation storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2390,
                                          "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                          "value": "companies"
                                        },
                                        "id": 2620,
                                        "name": "Identifier",
                                        "src": "3597:9:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2598,
                                          "type": "address",
                                          "value": "company"
                                        },
                                        "id": 2621,
                                        "name": "Identifier",
                                        "src": "3607:7:9"
                                      }
                                    ],
                                    "id": 2622,
                                    "name": "IndexAccess",
                                    "src": "3597:18:9"
                                  }
                                ],
                                "id": 2623,
                                "name": "MemberAccess",
                                "src": "3597:28:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2285,
                                  "type": "string memory",
                                  "value": "name"
                                },
                                "id": 2311,
                                "name": "Identifier",
                                "src": "2930:4:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2289,
                                  "type": "address",
                                  "value": "approvedBy"
                                },
                                "id": 2312,
                                "name": "Identifier",
                                "src": "2948:10:9"
                              }
                            ],
                            "id": 2313,
                            "name": "FunctionCall",
                            "src": "2904:56:9"
                          }
                        ],
                        "id": 2314,
                        "name": "Assignment",
                        "src": "2883:77:9"
                      }
                    ],
                    "id": 2315,
                    "name": "ExpressionStatement",
                    "src": "2883:77:9"
                  }
                ],
                "id": 2316,
                "name": "Block",
                "src": "2701:267:9"
              }
            ],
            "id": 2317,
            "name": "FunctionDefinition",
            "src": "2589:379:9"
=======
                                  "referencedDeclaration": 2600,
                                  "type": "uint256",
                                  "value": "year"
                                },
                                "id": 2624,
                                "name": "Identifier",
                                "src": "3626:4:9"
                              }
                            ],
                            "id": 2625,
                            "name": "IndexAccess",
                            "src": "3597:34:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2602,
                              "type": "uint256",
                              "value": "emissions"
                            },
                            "id": 2626,
                            "name": "Identifier",
                            "src": "3634:9:9"
                          }
                        ],
                        "id": 2627,
                        "name": "Assignment",
                        "src": "3597:46:9"
                      }
                    ],
                    "id": 2628,
                    "name": "ExpressionStatement",
                    "src": "3597:46:9"
                  }
                ],
                "id": 2629,
                "name": "Block",
                "src": "3428:223:9"
              }
            ],
            "id": 2630,
            "name": "FunctionDefinition",
            "src": "3311:340:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "removeCompany",
              "scope": 2396,
=======
              "name": "updateCompanyLimits",
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "company",
<<<<<<< HEAD
                      "scope": 2343,
=======
                      "scope": 2664,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2631,
                        "name": "ElementaryTypeName",
                        "src": "3688:7:9"
                      }
                    ],
                    "id": 2632,
                    "name": "VariableDeclaration",
                    "src": "3688:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "year",
                      "scope": 2664,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2318,
                        "name": "ElementaryTypeName",
                        "src": "3052:7:9"
                      }
                    ],
                    "id": 2319,
                    "name": "VariableDeclaration",
                    "src": "3052:15:9"
                  }
                ],
                "id": 2320,
                "name": "ParameterList",
                "src": "3051:17:9"
=======
                        "id": 2633,
                        "name": "ElementaryTypeName",
                        "src": "3705:7:9"
                      }
                    ],
                    "id": 2634,
                    "name": "VariableDeclaration",
                    "src": "3705:12:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "limit",
                      "scope": 2664,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2635,
                        "name": "ElementaryTypeName",
                        "src": "3719:7:9"
                      }
                    ],
                    "id": 2636,
                    "name": "VariableDeclaration",
                    "src": "3719:13:9"
                  }
                ],
                "id": 2637,
                "name": "ParameterList",
                "src": "3687:46:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
<<<<<<< HEAD
                "id": 2323,
                "name": "ParameterList",
                "src": "3104:0:9"
=======
                "id": 2640,
                "name": "ParameterList",
                "src": "3769:0:9"
>>>>>>> origin/CarbonToken
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
<<<<<<< HEAD
                      "referencedDeclaration": 2169,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2321,
                    "name": "Identifier",
                    "src": "3076:27:9"
                  }
                ],
                "id": 2322,
                "name": "ModifierInvocation",
                "src": "3076:27:9"
=======
                      "referencedDeclaration": 2434,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2638,
                    "name": "Identifier",
                    "src": "3741:27:9"
                  }
                ],
                "id": 2639,
                "name": "ModifierInvocation",
                "src": "3741:27:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                                  "typeString": "literal_string \"Address is not an approved company!\""
                                }
                              ],
                              "overloadedDeclarations": [
<<<<<<< HEAD
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2324,
                            "name": "Identifier",
                            "src": "3170:7:9"
=======
                                3128,
                                3129
                              ],
                              "referencedDeclaration": 3129,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2641,
                            "name": "Identifier",
                            "src": "3780:7:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
<<<<<<< HEAD
                                        "id": 2325,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "3178:5:9"
=======
                                        "id": 2642,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "3788:5:9"
>>>>>>> origin/CarbonToken
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "name",
<<<<<<< HEAD
                                          "referencedDeclaration": 2115,
=======
                                          "referencedDeclaration": 2365,
>>>>>>> origin/CarbonToken
                                          "type": "string storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2136,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2326,
                                                "name": "Identifier",
                                                "src": "3184:9:9"
=======
                                                  "referencedDeclaration": 2390,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2643,
                                                "name": "Identifier",
                                                "src": "3794:9:9"
>>>>>>> origin/CarbonToken
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
<<<<<<< HEAD
                                                  "referencedDeclaration": 2319,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2327,
                                                "name": "Identifier",
                                                "src": "3194:7:9"
                                              }
                                            ],
                                            "id": 2328,
                                            "name": "IndexAccess",
                                            "src": "3184:18:9"
                                          }
                                        ],
                                        "id": 2329,
                                        "name": "MemberAccess",
                                        "src": "3184:23:9"
                                      }
                                    ],
                                    "id": 2330,
                                    "name": "FunctionCall",
                                    "src": "3178:30:9"
                                  }
                                ],
                                "id": 2331,
                                "name": "MemberAccess",
                                "src": "3178:37:9"
=======
                                                  "referencedDeclaration": 2632,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2644,
                                                "name": "Identifier",
                                                "src": "3804:7:9"
                                              }
                                            ],
                                            "id": 2645,
                                            "name": "IndexAccess",
                                            "src": "3794:18:9"
                                          }
                                        ],
                                        "id": 2646,
                                        "name": "MemberAccess",
                                        "src": "3794:23:9"
                                      }
                                    ],
                                    "id": 2647,
                                    "name": "FunctionCall",
                                    "src": "3788:30:9"
                                  }
                                ],
                                "id": 2648,
                                "name": "MemberAccess",
                                "src": "3788:37:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
<<<<<<< HEAD
                                "id": 2332,
                                "name": "Literal",
                                "src": "3219:1:9"
                              }
                            ],
                            "id": 2333,
                            "name": "BinaryOperation",
                            "src": "3178:42:9"
=======
                                "id": 2649,
                                "name": "Literal",
                                "src": "3829:1:9"
                              }
                            ],
                            "id": 2650,
                            "name": "BinaryOperation",
                            "src": "3788:42:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
<<<<<<< HEAD
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address is not an approved company!\"",
                              "value": "Address is not an approved company!"
                            },
                            "id": 2334,
                            "name": "Literal",
                            "src": "3222:37:9"
                          }
                        ],
                        "id": 2335,
                        "name": "FunctionCall",
                        "src": "3170:90:9"
                      }
                    ],
                    "id": 2336,
                    "name": "ExpressionStatement",
                    "src": "3170:90:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "delete",
                          "prefix": true,
                          "type": "tuple()"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct UserDataStorage.CompanyInformation storage ref"
=======
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Address is not an approved company!\"",
                              "value": "Address is not an approved company!"
                            },
                            "id": 2651,
                            "name": "Literal",
                            "src": "3832:37:9"
                          }
                        ],
                        "id": 2652,
                        "name": "FunctionCall",
                        "src": "3780:90:9"
                      }
                    ],
                    "id": 2653,
                    "name": "ExpressionStatement",
                    "src": "3780:90:9"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
<<<<<<< HEAD
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2136,
                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                  "value": "companies"
                                },
                                "id": 2337,
                                "name": "Identifier",
                                "src": "3280:9:9"
=======
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "limits",
                                  "referencedDeclaration": 2375,
                                  "type": "mapping(uint256 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct UserDataStorage.CompanyInformation storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2390,
                                          "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                          "value": "companies"
                                        },
                                        "id": 2654,
                                        "name": "Identifier",
                                        "src": "3883:9:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2632,
                                          "type": "address",
                                          "value": "company"
                                        },
                                        "id": 2655,
                                        "name": "Identifier",
                                        "src": "3893:7:9"
                                      }
                                    ],
                                    "id": 2656,
                                    "name": "IndexAccess",
                                    "src": "3883:18:9"
                                  }
                                ],
                                "id": 2657,
                                "name": "MemberAccess",
                                "src": "3883:25:9"
>>>>>>> origin/CarbonToken
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
<<<<<<< HEAD
                                  "referencedDeclaration": 2319,
                                  "type": "address",
                                  "value": "company"
                                },
                                "id": 2338,
                                "name": "Identifier",
                                "src": "3290:7:9"
                              }
                            ],
                            "id": 2339,
                            "name": "IndexAccess",
                            "src": "3280:18:9"
                          }
                        ],
                        "id": 2340,
                        "name": "UnaryOperation",
                        "src": "3273:25:9"
                      }
                    ],
                    "id": 2341,
                    "name": "ExpressionStatement",
                    "src": "3273:25:9"
                  }
                ],
                "id": 2342,
                "name": "Block",
                "src": "3104:202:9"
              }
            ],
            "id": 2343,
            "name": "FunctionDefinition",
            "src": "3029:277:9"
=======
                                  "referencedDeclaration": 2634,
                                  "type": "uint256",
                                  "value": "year"
                                },
                                "id": 2658,
                                "name": "Identifier",
                                "src": "3909:4:9"
                              }
                            ],
                            "id": 2659,
                            "name": "IndexAccess",
                            "src": "3883:31:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2636,
                              "type": "uint256",
                              "value": "limit"
                            },
                            "id": 2660,
                            "name": "Identifier",
                            "src": "3917:5:9"
                          }
                        ],
                        "id": 2661,
                        "name": "Assignment",
                        "src": "3883:39:9"
                      }
                    ],
                    "id": 2662,
                    "name": "ExpressionStatement",
                    "src": "3883:39:9"
                  }
                ],
                "id": 2663,
                "name": "Block",
                "src": "3769:161:9"
              }
            ],
            "id": 2664,
            "name": "FunctionDefinition",
            "src": "3659:271:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
<<<<<<< HEAD
              "name": "updateCompanyEmissions",
              "scope": 2396,
              "stateMutability": "nonpayable",
=======
              "modifiers": [
                null
              ],
              "name": "isApprovedCompany",
              "scope": 2717,
              "stateMutability": "view",
>>>>>>> origin/CarbonToken
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
<<<<<<< HEAD
                      "name": "company",
                      "scope": 2377,
=======
                      "name": "_address",
                      "scope": 2682,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2344,
                        "name": "ElementaryTypeName",
                        "src": "3402:7:9"
                      }
                    ],
                    "id": 2345,
                    "name": "VariableDeclaration",
                    "src": "3402:15:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "year",
                      "scope": 2377,
=======
                        "id": 2665,
                        "name": "ElementaryTypeName",
                        "src": "4026:7:9"
                      }
                    ],
                    "id": 2666,
                    "name": "VariableDeclaration",
                    "src": "4026:16:9"
                  }
                ],
                "id": 2667,
                "name": "ParameterList",
                "src": "4025:18:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2682,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2346,
                        "name": "ElementaryTypeName",
                        "src": "3419:7:9"
                      }
                    ],
                    "id": 2347,
                    "name": "VariableDeclaration",
                    "src": "3419:12:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "emissions",
                      "scope": 2377,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2348,
                        "name": "ElementaryTypeName",
                        "src": "3433:7:9"
                      }
                    ],
                    "id": 2349,
                    "name": "VariableDeclaration",
                    "src": "3433:17:9"
                  }
                ],
                "id": 2350,
                "name": "ParameterList",
                "src": "3401:50:9"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2353,
                "name": "ParameterList",
                "src": "3487:0:9"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2169,
                      "type": "modifier ()",
                      "value": "approvedCompanyContractOnly"
                    },
                    "id": 2351,
                    "name": "Identifier",
                    "src": "3459:27:9"
                  }
                ],
                "id": 2352,
                "name": "ModifierInvocation",
                "src": "3459:27:9"
=======
                        "id": 2668,
                        "name": "ElementaryTypeName",
                        "src": "4064:4:9"
                      }
                    ],
                    "id": 2669,
                    "name": "VariableDeclaration",
                    "src": "4064:4:9"
                  }
                ],
                "id": 2670,
                "name": "ParameterList",
                "src": "4063:6:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 2670
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
=======
                          "operator": "!=",
                          "type": "bool"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_49c19cba3399320811b65aee2f00d9f4e312501b58d17cd09b5c14f2d25bb9d7",
                                  "typeString": "literal_string \"Address is not an approved company!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                2798,
                                2799
                              ],
                              "referencedDeclaration": 2799,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 2354,
                            "name": "Identifier",
                            "src": "3553:7:9"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
<<<<<<< HEAD
                              "operator": "!=",
                              "type": "bool"
=======
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
<<<<<<< HEAD
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
=======
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
>>>>>>> origin/CarbonToken
                                },
                                "children": [
                                  {
                                    "attributes": {
<<<<<<< HEAD
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes storage pointer",
                                      "type_conversion": true
=======
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 2671,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4088:5:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "name",
                                      "referencedDeclaration": 2365,
                                      "type": "string storage ref"
>>>>>>> origin/CarbonToken
                                    },
                                    "children": [
                                      {
                                        "attributes": {
<<<<<<< HEAD
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 2355,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "3561:5:9"
                                      },
                                      {
                                        "attributes": {
=======
>>>>>>> origin/CarbonToken
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
<<<<<<< HEAD
                                          "member_name": "name",
                                          "referencedDeclaration": 2115,
                                          "type": "string storage ref"
=======
                                          "type": "struct UserDataStorage.CompanyInformation storage ref"
>>>>>>> origin/CarbonToken
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
<<<<<<< HEAD
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct UserDataStorage.CompanyInformation storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2136,
                                                  "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                                  "value": "companies"
                                                },
                                                "id": 2356,
                                                "name": "Identifier",
                                                "src": "3567:9:9"
                                              },
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 2345,
                                                  "type": "address",
                                                  "value": "company"
                                                },
                                                "id": 2357,
                                                "name": "Identifier",
                                                "src": "3577:7:9"
                                              }
                                            ],
                                            "id": 2358,
                                            "name": "IndexAccess",
                                            "src": "3567:18:9"
                                          }
                                        ],
                                        "id": 2359,
                                        "name": "MemberAccess",
                                        "src": "3567:23:9"
                                      }
                                    ],
                                    "id": 2360,
                                    "name": "FunctionCall",
                                    "src": "3561:30:9"
                                  }
                                ],
                                "id": 2361,
                                "name": "MemberAccess",
                                "src": "3561:37:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 2362,
                                "name": "Literal",
                                "src": "3602:1:9"
                              }
                            ],
                            "id": 2363,
                            "name": "BinaryOperation",
                            "src": "3561:42:9"
=======
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2390,
                                              "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                              "value": "companies"
                                            },
                                            "id": 2672,
                                            "name": "Identifier",
                                            "src": "4094:9:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2666,
                                              "type": "address",
                                              "value": "_address"
                                            },
                                            "id": 2673,
                                            "name": "Identifier",
                                            "src": "4104:8:9"
                                          }
                                        ],
                                        "id": 2674,
                                        "name": "IndexAccess",
                                        "src": "4094:19:9"
                                      }
                                    ],
                                    "id": 2675,
                                    "name": "MemberAccess",
                                    "src": "4094:24:9"
                                  }
                                ],
                                "id": 2676,
                                "name": "FunctionCall",
                                "src": "4088:31:9"
                              }
                            ],
                            "id": 2677,
                            "name": "MemberAccess",
                            "src": "4088:38:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "41646472657373206973206e6f7420616e20617070726f76656420636f6d70616e7921",
=======
                              "hexvalue": "30",
>>>>>>> origin/CarbonToken
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
<<<<<<< HEAD
                              "token": "string",
                              "type": "literal_string \"Address is not an approved company!\"",
                              "value": "Address is not an approved company!"
                            },
                            "id": 2364,
                            "name": "Literal",
                            "src": "3605:37:9"
                          }
                        ],
                        "id": 2365,
                        "name": "FunctionCall",
                        "src": "3553:90:9"
                      }
                    ],
                    "id": 2366,
                    "name": "ExpressionStatement",
                    "src": "3553:90:9"
                  },
=======
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2678,
                            "name": "Literal",
                            "src": "4130:1:9"
                          }
                        ],
                        "id": 2679,
                        "name": "BinaryOperation",
                        "src": "4088:43:9"
                      }
                    ],
                    "id": 2680,
                    "name": "Return",
                    "src": "4081:50:9"
                  }
                ],
                "id": 2681,
                "name": "Block",
                "src": "4070:69:9"
              }
            ],
            "id": 2682,
            "name": "FunctionDefinition",
            "src": "3999:140:9"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getEmissions",
              "scope": 2717,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
                      "scope": 2699,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2683,
                        "name": "ElementaryTypeName",
                        "src": "4232:7:9"
                      }
                    ],
                    "id": 2684,
                    "name": "VariableDeclaration",
                    "src": "4232:16:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "year",
                      "scope": 2699,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2685,
                        "name": "ElementaryTypeName",
                        "src": "4250:7:9"
                      }
                    ],
                    "id": 2686,
                    "name": "VariableDeclaration",
                    "src": "4250:12:9"
                  }
                ],
                "id": 2687,
                "name": "ParameterList",
                "src": "4231:32:9"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 2699,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2688,
                        "name": "ElementaryTypeName",
                        "src": "4285:7:9"
                      }
                    ],
                    "id": 2689,
                    "name": "VariableDeclaration",
                    "src": "4285:7:9"
                  }
                ],
                "id": 2690,
                "name": "ParameterList",
                "src": "4284:9:9"
              },
              {
                "children": [
>>>>>>> origin/CarbonToken
                  {
                    "attributes": {
                      "functionReturnParameters": 2690
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "operator": "=",
=======
>>>>>>> origin/CarbonToken
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
<<<<<<< HEAD
                              "lValueRequested": true,
                              "type": "uint256"
=======
                              "lValueRequested": false,
                              "member_name": "emissions",
                              "referencedDeclaration": 2371,
                              "type": "mapping(uint256 => uint256)"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
<<<<<<< HEAD
                                  "member_name": "emissions",
                                  "referencedDeclaration": 2121,
                                  "type": "mapping(uint256 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct UserDataStorage.CompanyInformation storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2136,
                                          "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                          "value": "companies"
                                        },
                                        "id": 2367,
                                        "name": "Identifier",
                                        "src": "3656:9:9"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 2345,
                                          "type": "address",
                                          "value": "company"
                                        },
                                        "id": 2368,
                                        "name": "Identifier",
                                        "src": "3666:7:9"
                                      }
                                    ],
                                    "id": 2369,
                                    "name": "IndexAccess",
                                    "src": "3656:18:9"
                                  }
                                ],
                                "id": 2370,
                                "name": "MemberAccess",
                                "src": "3656:28:9"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2347,
                                  "type": "uint256",
                                  "value": "year"
                                },
                                "id": 2371,
                                "name": "Identifier",
                                "src": "3685:4:9"
                              }
                            ],
                            "id": 2372,
                            "name": "IndexAccess",
                            "src": "3656:34:9"
=======
                                  "type": "struct UserDataStorage.CompanyInformation storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2390,
                                      "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                      "value": "companies"
                                    },
                                    "id": 2691,
                                    "name": "Identifier",
                                    "src": "4312:9:9"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2684,
                                      "type": "address",
                                      "value": "_address"
                                    },
                                    "id": 2692,
                                    "name": "Identifier",
                                    "src": "4322:8:9"
                                  }
                                ],
                                "id": 2693,
                                "name": "IndexAccess",
                                "src": "4312:19:9"
                              }
                            ],
                            "id": 2694,
                            "name": "MemberAccess",
                            "src": "4312:29:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
<<<<<<< HEAD
                              "referencedDeclaration": 2349,
                              "type": "uint256",
                              "value": "emissions"
                            },
                            "id": 2373,
                            "name": "Identifier",
                            "src": "3693:9:9"
                          }
                        ],
                        "id": 2374,
                        "name": "Assignment",
                        "src": "3656:46:9"
                      }
                    ],
                    "id": 2375,
                    "name": "ExpressionStatement",
                    "src": "3656:46:9"
                  }
                ],
                "id": 2376,
                "name": "Block",
                "src": "3487:223:9"
              }
            ],
            "id": 2377,
            "name": "FunctionDefinition",
            "src": "3370:340:9"
=======
                              "referencedDeclaration": 2686,
                              "type": "uint256",
                              "value": "year"
                            },
                            "id": 2695,
                            "name": "Identifier",
                            "src": "4342:4:9"
                          }
                        ],
                        "id": 2696,
                        "name": "IndexAccess",
                        "src": "4312:35:9"
                      }
                    ],
                    "id": 2697,
                    "name": "Return",
                    "src": "4305:42:9"
                  }
                ],
                "id": 2698,
                "name": "Block",
                "src": "4294:61:9"
              }
            ],
            "id": 2699,
            "name": "FunctionDefinition",
            "src": "4210:145:9"
>>>>>>> origin/CarbonToken
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
<<<<<<< HEAD
              "name": "isApprovedCompany",
              "scope": 2396,
=======
              "name": "getLimit",
              "scope": 2717,
>>>>>>> origin/CarbonToken
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_address",
<<<<<<< HEAD
                      "scope": 2395,
=======
                      "scope": 2716,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
<<<<<<< HEAD
                        "id": 2378,
                        "name": "ElementaryTypeName",
                        "src": "3803:7:9"
                      }
                    ],
                    "id": 2379,
                    "name": "VariableDeclaration",
                    "src": "3803:16:9"
                  }
                ],
                "id": 2380,
                "name": "ParameterList",
                "src": "3802:18:9"
=======
                        "id": 2700,
                        "name": "ElementaryTypeName",
                        "src": "4381:7:9"
                      }
                    ],
                    "id": 2701,
                    "name": "VariableDeclaration",
                    "src": "4381:16:9"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "year",
                      "scope": 2716,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2702,
                        "name": "ElementaryTypeName",
                        "src": "4399:7:9"
                      }
                    ],
                    "id": 2703,
                    "name": "VariableDeclaration",
                    "src": "4399:12:9"
                  }
                ],
                "id": 2704,
                "name": "ParameterList",
                "src": "4380:32:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
<<<<<<< HEAD
                      "scope": 2395,
=======
                      "scope": 2716,
>>>>>>> origin/CarbonToken
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
<<<<<<< HEAD
                        "id": 2381,
                        "name": "ElementaryTypeName",
                        "src": "3841:4:9"
                      }
                    ],
                    "id": 2382,
                    "name": "VariableDeclaration",
                    "src": "3841:4:9"
                  }
                ],
                "id": 2383,
                "name": "ParameterList",
                "src": "3840:6:9"
=======
                        "id": 2705,
                        "name": "ElementaryTypeName",
                        "src": "4434:7:9"
                      }
                    ],
                    "id": 2706,
                    "name": "VariableDeclaration",
                    "src": "4434:7:9"
                  }
                ],
                "id": 2707,
                "name": "ParameterList",
                "src": "4433:9:9"
>>>>>>> origin/CarbonToken
              },
              {
                "children": [
                  {
                    "attributes": {
<<<<<<< HEAD
                      "functionReturnParameters": 2383
=======
                      "functionReturnParameters": 2707
>>>>>>> origin/CarbonToken
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
<<<<<<< HEAD
                          "operator": "!=",
                          "type": "bool"
=======
                          "type": "uint256"
>>>>>>> origin/CarbonToken
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
<<<<<<< HEAD
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
=======
                              "member_name": "limits",
                              "referencedDeclaration": 2375,
                              "type": "mapping(uint256 => uint256)"
>>>>>>> origin/CarbonToken
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
<<<<<<< HEAD
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
=======
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct UserDataStorage.CompanyInformation storage ref"
>>>>>>> origin/CarbonToken
                                },
                                "children": [
                                  {
                                    "attributes": {
<<<<<<< HEAD
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)",
                                      "value": "bytes"
                                    },
                                    "id": 2384,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3865:5:9"
=======
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2390,
                                      "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                      "value": "companies"
                                    },
                                    "id": 2708,
                                    "name": "Identifier",
                                    "src": "4461:9:9"
>>>>>>> origin/CarbonToken
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
<<<<<<< HEAD
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "name",
                                      "referencedDeclaration": 2115,
                                      "type": "string storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct UserDataStorage.CompanyInformation storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2136,
                                              "type": "mapping(address => struct UserDataStorage.CompanyInformation storage ref)",
                                              "value": "companies"
                                            },
                                            "id": 2385,
                                            "name": "Identifier",
                                            "src": "3871:9:9"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 2379,
                                              "type": "address",
                                              "value": "_address"
                                            },
                                            "id": 2386,
                                            "name": "Identifier",
                                            "src": "3881:8:9"
                                          }
                                        ],
                                        "id": 2387,
                                        "name": "IndexAccess",
                                        "src": "3871:19:9"
                                      }
                                    ],
                                    "id": 2388,
                                    "name": "MemberAccess",
                                    "src": "3871:24:9"
                                  }
                                ],
                                "id": 2389,
                                "name": "FunctionCall",
                                "src": "3865:31:9"
                              }
                            ],
                            "id": 2390,
                            "name": "MemberAccess",
                            "src": "3865:38:9"
=======
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2701,
                                      "type": "address",
                                      "value": "_address"
                                    },
                                    "id": 2709,
                                    "name": "Identifier",
                                    "src": "4471:8:9"
                                  }
                                ],
                                "id": 2710,
                                "name": "IndexAccess",
                                "src": "4461:19:9"
                              }
                            ],
                            "id": 2711,
                            "name": "MemberAccess",
                            "src": "4461:26:9"
>>>>>>> origin/CarbonToken
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
<<<<<<< HEAD
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 2391,
                            "name": "Literal",
                            "src": "3907:1:9"
                          }
                        ],
                        "id": 2392,
                        "name": "BinaryOperation",
                        "src": "3865:43:9"
                      }
                    ],
                    "id": 2393,
                    "name": "Return",
                    "src": "3858:50:9"
                  }
                ],
                "id": 2394,
                "name": "Block",
                "src": "3847:69:9"
              }
            ],
            "id": 2395,
            "name": "FunctionDefinition",
            "src": "3776:140:9"
          }
        ],
        "id": 2396,
        "name": "ContractDefinition",
        "src": "83:3838:9"
      }
    ],
    "id": 2397,
    "name": "SourceUnit",
    "src": "0:3925:9"
=======
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2703,
                              "type": "uint256",
                              "value": "year"
                            },
                            "id": 2712,
                            "name": "Identifier",
                            "src": "4488:4:9"
                          }
                        ],
                        "id": 2713,
                        "name": "IndexAccess",
                        "src": "4461:32:9"
                      }
                    ],
                    "id": 2714,
                    "name": "Return",
                    "src": "4454:39:9"
                  }
                ],
                "id": 2715,
                "name": "Block",
                "src": "4443:58:9"
              }
            ],
            "id": 2716,
            "name": "FunctionDefinition",
            "src": "4363:138:9"
          }
        ],
        "id": 2717,
        "name": "ContractDefinition",
        "src": "83:4425:9"
      }
    ],
    "id": 2718,
    "name": "SourceUnit",
    "src": "0:4512:9"
>>>>>>> origin/CarbonToken
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x1E62C3287D8b24151EA98eA7176A763E83340eBb",
      "transactionHash": "0x9b80596681d2c4ae2bdc66bb2b92078644b8a18d088ca3be6095e00383532200"
    }
  },
  "schemaVersion": "3.4.4",
<<<<<<< HEAD
  "updatedAt": "2022-04-05T08:18:48.733Z",
=======
  "updatedAt": "2022-04-06T11:46:53.216Z",
  "networkType": "ethereum",
>>>>>>> origin/CarbonToken
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}